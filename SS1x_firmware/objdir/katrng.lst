   1              		.cpu cortex-m4
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 6
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"katrng.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.global	DRBG_ctx
  16              		.bss
  17              		.align	2
  20              	DRBG_ctx:
  21 0000 00000000 		.space	52
  21      00000000 
  21      00000000 
  21      00000000 
  21      00000000 
  22              		.section	.text.seedexpander_init,"ax",%progbits
  23              		.align	1
  24              		.global	seedexpander_init
  25              		.arch armv7e-m
  26              		.syntax unified
  27              		.thumb
  28              		.thumb_func
  29              		.fpu softvfp
  31              	seedexpander_init:
  32              	.LFB3:
  33              		.file 1 "katrng.c"
   1:katrng.c      **** //
   2:katrng.c      **** //  katrng.c
   3:katrng.c      **** //
   4:katrng.c      **** //  Created by Bassham, Lawrence E (Fed) on 8/29/17.
   5:katrng.c      **** //  Copyright Â© 2017 Bassham, Lawrence E (Fed). All rights reserved.
   6:katrng.c      **** //
   7:katrng.c      **** 
   8:katrng.c      **** #include <string.h>
   9:katrng.c      **** #include "katrng.h"
  10:katrng.c      **** /* removed -- use custom AES implementation instead of OpenSSL.
  11:katrng.c      **** #include <openssl/conf.h>
  12:katrng.c      **** #include <openssl/evp.h>
  13:katrng.c      **** #include <openssl/err.h>
  14:katrng.c      **** */
  15:katrng.c      **** #include <stdint.h>
  16:katrng.c      **** 
  17:katrng.c      **** AES256_CTR_DRBG_struct  DRBG_ctx;
  18:katrng.c      **** 
  19:katrng.c      **** void    AES256_ECB(unsigned char *key, unsigned char *ctr, unsigned char *buffer);
  20:katrng.c      **** 
  21:katrng.c      **** /*
  22:katrng.c      ****  seedexpander_init()
  23:katrng.c      ****  ctx            - stores the current state of an instance of the seed expander
  24:katrng.c      ****  seed           - a 32 byte random value
  25:katrng.c      ****  diversifier    - an 8 byte diversifier
  26:katrng.c      ****  maxlen         - maximum number of bytes (less than 2**32) generated under this seed and diversifi
  27:katrng.c      ****  */
  28:katrng.c      **** int
  29:katrng.c      **** seedexpander_init(AES_XOF_struct *ctx,
  30:katrng.c      ****                   unsigned char *seed,
  31:katrng.c      ****                   unsigned char *diversifier,
  32:katrng.c      ****                   unsigned long maxlen)
  33:katrng.c      **** {
  34              		.loc 1 33 1
  35              		.cfi_startproc
  36              		@ args = 0, pretend = 0, frame = 16
  37              		@ frame_needed = 1, uses_anonymous_args = 0
  38 0000 80B5     		push	{r7, lr}
  39              	.LCFI0:
  40              		.cfi_def_cfa_offset 8
  41              		.cfi_offset 7, -8
  42              		.cfi_offset 14, -4
  43 0002 84B0     		sub	sp, sp, #16
  44              	.LCFI1:
  45              		.cfi_def_cfa_offset 24
  46 0004 00AF     		add	r7, sp, #0
  47              	.LCFI2:
  48              		.cfi_def_cfa_register 7
  49 0006 F860     		str	r0, [r7, #12]
  50 0008 B960     		str	r1, [r7, #8]
  51 000a 7A60     		str	r2, [r7, #4]
  52 000c 3B60     		str	r3, [r7]
  34:katrng.c      ****     if ( (maxlen >> 16) >= 0x10000 )
  53              		.loc 1 34 18
  54 000e 3B68     		ldr	r3, [r7]
  55 0010 1B0C     		lsrs	r3, r3, #16
  56              		.loc 1 34 8
  57 0012 B3F5803F 		cmp	r3, #65536
  58 0016 02D3     		bcc	.L2
  35:katrng.c      ****         return RNG_BAD_MAXLEN;
  59              		.loc 1 35 16
  60 0018 4FF0FF33 		mov	r3, #-1
  61 001c 3FE0     		b	.L3
  62              	.L2:
  36:katrng.c      ****     
  37:katrng.c      ****     ctx->length_remaining = maxlen;
  63              		.loc 1 37 27
  64 001e FB68     		ldr	r3, [r7, #12]
  65 0020 3A68     		ldr	r2, [r7]
  66 0022 5A61     		str	r2, [r3, #20]
  38:katrng.c      ****     
  39:katrng.c      ****     memcpy(ctx->key, seed, 32);
  67              		.loc 1 39 15
  68 0024 FB68     		ldr	r3, [r7, #12]
  69 0026 1833     		adds	r3, r3, #24
  70              		.loc 1 39 5
  71 0028 2022     		movs	r2, #32
  72 002a B968     		ldr	r1, [r7, #8]
  73 002c 1846     		mov	r0, r3
  74 002e FFF7FEFF 		bl	memcpy
  40:katrng.c      ****     
  41:katrng.c      ****     memcpy(ctx->ctr, diversifier, 8);
  75              		.loc 1 41 15
  76 0032 FB68     		ldr	r3, [r7, #12]
  77 0034 3833     		adds	r3, r3, #56
  78              		.loc 1 41 5
  79 0036 0822     		movs	r2, #8
  80 0038 7968     		ldr	r1, [r7, #4]
  81 003a 1846     		mov	r0, r3
  82 003c FFF7FEFF 		bl	memcpy
  42:katrng.c      ****     ctx->ctr[11] = maxlen % 256;
  83              		.loc 1 42 18
  84 0040 3B68     		ldr	r3, [r7]
  85 0042 DAB2     		uxtb	r2, r3
  86 0044 FB68     		ldr	r3, [r7, #12]
  87 0046 83F84320 		strb	r2, [r3, #67]
  43:katrng.c      ****     maxlen >>= 8;
  88              		.loc 1 43 12
  89 004a 3B68     		ldr	r3, [r7]
  90 004c 1B0A     		lsrs	r3, r3, #8
  91 004e 3B60     		str	r3, [r7]
  44:katrng.c      ****     ctx->ctr[10] = maxlen % 256;
  92              		.loc 1 44 18
  93 0050 3B68     		ldr	r3, [r7]
  94 0052 DAB2     		uxtb	r2, r3
  95 0054 FB68     		ldr	r3, [r7, #12]
  96 0056 83F84220 		strb	r2, [r3, #66]
  45:katrng.c      ****     maxlen >>= 8;
  97              		.loc 1 45 12
  98 005a 3B68     		ldr	r3, [r7]
  99 005c 1B0A     		lsrs	r3, r3, #8
 100 005e 3B60     		str	r3, [r7]
  46:katrng.c      ****     ctx->ctr[9] = maxlen % 256;
 101              		.loc 1 46 17
 102 0060 3B68     		ldr	r3, [r7]
 103 0062 DAB2     		uxtb	r2, r3
 104 0064 FB68     		ldr	r3, [r7, #12]
 105 0066 83F84120 		strb	r2, [r3, #65]
  47:katrng.c      ****     maxlen >>= 8;
 106              		.loc 1 47 12
 107 006a 3B68     		ldr	r3, [r7]
 108 006c 1B0A     		lsrs	r3, r3, #8
 109 006e 3B60     		str	r3, [r7]
  48:katrng.c      ****     ctx->ctr[8] = maxlen % 256;
 110              		.loc 1 48 17
 111 0070 3B68     		ldr	r3, [r7]
 112 0072 DAB2     		uxtb	r2, r3
 113 0074 FB68     		ldr	r3, [r7, #12]
 114 0076 83F84020 		strb	r2, [r3, #64]
  49:katrng.c      ****     memset(ctx->ctr+12, 0x00, 4);
 115              		.loc 1 49 12
 116 007a FB68     		ldr	r3, [r7, #12]
 117 007c 3833     		adds	r3, r3, #56
 118              		.loc 1 49 5
 119 007e 0C33     		adds	r3, r3, #12
 120 0080 0422     		movs	r2, #4
 121 0082 0021     		movs	r1, #0
 122 0084 1846     		mov	r0, r3
 123 0086 FFF7FEFF 		bl	memset
  50:katrng.c      ****     
  51:katrng.c      ****     ctx->buffer_pos = 16;
 124              		.loc 1 51 21
 125 008a FB68     		ldr	r3, [r7, #12]
 126 008c 1022     		movs	r2, #16
 127 008e 1A61     		str	r2, [r3, #16]
  52:katrng.c      ****     memset(ctx->buffer, 0x00, 16);
 128              		.loc 1 52 15
 129 0090 FB68     		ldr	r3, [r7, #12]
 130              		.loc 1 52 5
 131 0092 1022     		movs	r2, #16
 132 0094 0021     		movs	r1, #0
 133 0096 1846     		mov	r0, r3
 134 0098 FFF7FEFF 		bl	memset
  53:katrng.c      ****     
  54:katrng.c      ****     return RNG_SUCCESS;
 135              		.loc 1 54 12
 136 009c 0023     		movs	r3, #0
 137              	.L3:
  55:katrng.c      **** }
 138              		.loc 1 55 1
 139 009e 1846     		mov	r0, r3
 140 00a0 1037     		adds	r7, r7, #16
 141              	.LCFI3:
 142              		.cfi_def_cfa_offset 8
 143 00a2 BD46     		mov	sp, r7
 144              	.LCFI4:
 145              		.cfi_def_cfa_register 13
 146              		@ sp needed
 147 00a4 80BD     		pop	{r7, pc}
 148              		.cfi_endproc
 149              	.LFE3:
 151              		.section	.text.seedexpander,"ax",%progbits
 152              		.align	1
 153              		.global	seedexpander
 154              		.syntax unified
 155              		.thumb
 156              		.thumb_func
 157              		.fpu softvfp
 159              	seedexpander:
 160              	.LFB4:
  56:katrng.c      **** 
  57:katrng.c      **** /*
  58:katrng.c      ****  seedexpander()
  59:katrng.c      ****     ctx  - stores the current state of an instance of the seed expander
  60:katrng.c      ****     x    - returns the XOF data
  61:katrng.c      ****     xlen - number of bytes to return
  62:katrng.c      ****  */
  63:katrng.c      **** int
  64:katrng.c      **** seedexpander(AES_XOF_struct *ctx, unsigned char *x, unsigned long xlen)
  65:katrng.c      **** {
 161              		.loc 1 65 1
 162              		.cfi_startproc
 163              		@ args = 0, pretend = 0, frame = 24
 164              		@ frame_needed = 1, uses_anonymous_args = 0
 165 0000 80B5     		push	{r7, lr}
 166              	.LCFI5:
 167              		.cfi_def_cfa_offset 8
 168              		.cfi_offset 7, -8
 169              		.cfi_offset 14, -4
 170 0002 86B0     		sub	sp, sp, #24
 171              	.LCFI6:
 172              		.cfi_def_cfa_offset 32
 173 0004 00AF     		add	r7, sp, #0
 174              	.LCFI7:
 175              		.cfi_def_cfa_register 7
 176 0006 F860     		str	r0, [r7, #12]
 177 0008 B960     		str	r1, [r7, #8]
 178 000a 7A60     		str	r2, [r7, #4]
  66:katrng.c      ****     unsigned long   offset;
  67:katrng.c      ****     
  68:katrng.c      ****     if ( x == NULL )
 179              		.loc 1 68 8
 180 000c BB68     		ldr	r3, [r7, #8]
 181 000e 002B     		cmp	r3, #0
 182 0010 02D1     		bne	.L5
  69:katrng.c      ****         return RNG_BAD_OUTBUF;
 183              		.loc 1 69 16
 184 0012 6FF00103 		mvn	r3, #1
 185 0016 7DE0     		b	.L6
 186              	.L5:
  70:katrng.c      ****     if ( xlen >= ctx->length_remaining )
 187              		.loc 1 70 21
 188 0018 FB68     		ldr	r3, [r7, #12]
 189 001a 5B69     		ldr	r3, [r3, #20]
 190              		.loc 1 70 8
 191 001c 7A68     		ldr	r2, [r7, #4]
 192 001e 9A42     		cmp	r2, r3
 193 0020 02D3     		bcc	.L7
  71:katrng.c      ****         return RNG_BAD_REQ_LEN;
 194              		.loc 1 71 16
 195 0022 6FF00203 		mvn	r3, #2
 196 0026 75E0     		b	.L6
 197              	.L7:
  72:katrng.c      ****     
  73:katrng.c      ****     ctx->length_remaining -= xlen;
 198              		.loc 1 73 27
 199 0028 FB68     		ldr	r3, [r7, #12]
 200 002a 5A69     		ldr	r2, [r3, #20]
 201 002c 7B68     		ldr	r3, [r7, #4]
 202 002e D21A     		subs	r2, r2, r3
 203 0030 FB68     		ldr	r3, [r7, #12]
 204 0032 5A61     		str	r2, [r3, #20]
  74:katrng.c      ****     
  75:katrng.c      ****     offset = 0;
 205              		.loc 1 75 12
 206 0034 0023     		movs	r3, #0
 207 0036 7B61     		str	r3, [r7, #20]
  76:katrng.c      ****     while ( xlen > 0 ) {
 208              		.loc 1 76 11
 209 0038 68E0     		b	.L8
 210              	.L14:
  77:katrng.c      ****         if ( xlen <= (16U-ctx->buffer_pos) ) { // buffer has what we need
 211              		.loc 1 77 30
 212 003a FB68     		ldr	r3, [r7, #12]
 213 003c 1B69     		ldr	r3, [r3, #16]
 214              		.loc 1 77 26
 215 003e C3F11003 		rsb	r3, r3, #16
 216              		.loc 1 77 12
 217 0042 7A68     		ldr	r2, [r7, #4]
 218 0044 9A42     		cmp	r2, r3
 219 0046 14D8     		bhi	.L9
  78:katrng.c      ****             memcpy(x+offset, ctx->buffer+ctx->buffer_pos, xlen);
 220              		.loc 1 78 21
 221 0048 BA68     		ldr	r2, [r7, #8]
 222 004a 7B69     		ldr	r3, [r7, #20]
 223 004c D018     		adds	r0, r2, r3
 224              		.loc 1 78 30
 225 004e FB68     		ldr	r3, [r7, #12]
 226              		.loc 1 78 45
 227 0050 FA68     		ldr	r2, [r7, #12]
 228 0052 1269     		ldr	r2, [r2, #16]
 229              		.loc 1 78 13
 230 0054 1344     		add	r3, r3, r2
 231 0056 7A68     		ldr	r2, [r7, #4]
 232 0058 1946     		mov	r1, r3
 233 005a FFF7FEFF 		bl	memcpy
  79:katrng.c      ****             ctx->buffer_pos += xlen;
 234              		.loc 1 79 29
 235 005e FB68     		ldr	r3, [r7, #12]
 236 0060 1B69     		ldr	r3, [r3, #16]
 237 0062 1A46     		mov	r2, r3
 238 0064 7B68     		ldr	r3, [r7, #4]
 239 0066 1344     		add	r3, r3, r2
 240 0068 1A46     		mov	r2, r3
 241 006a FB68     		ldr	r3, [r7, #12]
 242 006c 1A61     		str	r2, [r3, #16]
  80:katrng.c      ****             
  81:katrng.c      ****             return RNG_SUCCESS;
 243              		.loc 1 81 20
 244 006e 0023     		movs	r3, #0
 245 0070 50E0     		b	.L6
 246              	.L9:
  82:katrng.c      ****         }
  83:katrng.c      ****         
  84:katrng.c      ****         // take what's in the buffer
  85:katrng.c      ****         memcpy(x+offset, ctx->buffer+ctx->buffer_pos, 16-ctx->buffer_pos);
 247              		.loc 1 85 17
 248 0072 BA68     		ldr	r2, [r7, #8]
 249 0074 7B69     		ldr	r3, [r7, #20]
 250 0076 D018     		adds	r0, r2, r3
 251              		.loc 1 85 26
 252 0078 FB68     		ldr	r3, [r7, #12]
 253              		.loc 1 85 41
 254 007a FA68     		ldr	r2, [r7, #12]
 255 007c 1269     		ldr	r2, [r2, #16]
 256              		.loc 1 85 9
 257 007e 9918     		adds	r1, r3, r2
 258              		.loc 1 85 61
 259 0080 FB68     		ldr	r3, [r7, #12]
 260 0082 1B69     		ldr	r3, [r3, #16]
 261              		.loc 1 85 57
 262 0084 C3F11003 		rsb	r3, r3, #16
 263              		.loc 1 85 9
 264 0088 1A46     		mov	r2, r3
 265 008a FFF7FEFF 		bl	memcpy
  86:katrng.c      ****         xlen -= 16-ctx->buffer_pos;
 266              		.loc 1 86 23
 267 008e FB68     		ldr	r3, [r7, #12]
 268 0090 1B69     		ldr	r3, [r3, #16]
 269              		.loc 1 86 14
 270 0092 1A46     		mov	r2, r3
 271 0094 7B68     		ldr	r3, [r7, #4]
 272 0096 1344     		add	r3, r3, r2
 273 0098 103B     		subs	r3, r3, #16
 274 009a 7B60     		str	r3, [r7, #4]
  87:katrng.c      ****         offset += 16-ctx->buffer_pos;
 275              		.loc 1 87 25
 276 009c FB68     		ldr	r3, [r7, #12]
 277 009e 1B69     		ldr	r3, [r3, #16]
 278              		.loc 1 87 16
 279 00a0 1A46     		mov	r2, r3
 280 00a2 7B69     		ldr	r3, [r7, #20]
 281 00a4 9B1A     		subs	r3, r3, r2
 282 00a6 1033     		adds	r3, r3, #16
 283 00a8 7B61     		str	r3, [r7, #20]
  88:katrng.c      ****         
  89:katrng.c      ****         AES256_ECB(ctx->key, ctx->ctr, ctx->buffer);
 284              		.loc 1 89 23
 285 00aa FB68     		ldr	r3, [r7, #12]
 286 00ac 03F11800 		add	r0, r3, #24
 287              		.loc 1 89 33
 288 00b0 FB68     		ldr	r3, [r7, #12]
 289 00b2 3833     		adds	r3, r3, #56
 290              		.loc 1 89 43
 291 00b4 FA68     		ldr	r2, [r7, #12]
 292              		.loc 1 89 9
 293 00b6 1946     		mov	r1, r3
 294 00b8 FFF7FEFF 		bl	AES256_ECB
  90:katrng.c      ****         ctx->buffer_pos = 0;
 295              		.loc 1 90 25
 296 00bc FB68     		ldr	r3, [r7, #12]
 297 00be 0022     		movs	r2, #0
 298 00c0 1A61     		str	r2, [r3, #16]
 299              	.LBB2:
  91:katrng.c      ****         
  92:katrng.c      ****         //increment the counter
  93:katrng.c      ****         for (int i=15; i>=12; i--) {
 300              		.loc 1 93 18
 301 00c2 0F23     		movs	r3, #15
 302 00c4 3B61     		str	r3, [r7, #16]
 303              		.loc 1 93 9
 304 00c6 1EE0     		b	.L10
 305              	.L13:
  94:katrng.c      ****             if ( ctx->ctr[i] == 0xff )
 306              		.loc 1 94 26
 307 00c8 FA68     		ldr	r2, [r7, #12]
 308 00ca 3B69     		ldr	r3, [r7, #16]
 309 00cc 1344     		add	r3, r3, r2
 310 00ce 3833     		adds	r3, r3, #56
 311 00d0 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 312              		.loc 1 94 16
 313 00d2 FF2B     		cmp	r3, #255
 314 00d4 06D1     		bne	.L11
  95:katrng.c      ****                 ctx->ctr[i] = 0x00;
 315              		.loc 1 95 29
 316 00d6 FA68     		ldr	r2, [r7, #12]
 317 00d8 3B69     		ldr	r3, [r7, #16]
 318 00da 1344     		add	r3, r3, r2
 319 00dc 3833     		adds	r3, r3, #56
 320 00de 0022     		movs	r2, #0
 321 00e0 1A70     		strb	r2, [r3]
 322 00e2 0DE0     		b	.L15
 323              	.L11:
  96:katrng.c      ****             else {
  97:katrng.c      ****                 ctx->ctr[i]++;
 324              		.loc 1 97 25
 325 00e4 FA68     		ldr	r2, [r7, #12]
 326 00e6 3B69     		ldr	r3, [r7, #16]
 327 00e8 1344     		add	r3, r3, r2
 328 00ea 3833     		adds	r3, r3, #56
 329 00ec 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 330              		.loc 1 97 28
 331 00ee 0133     		adds	r3, r3, #1
 332 00f0 D9B2     		uxtb	r1, r3
 333 00f2 FA68     		ldr	r2, [r7, #12]
 334 00f4 3B69     		ldr	r3, [r7, #16]
 335 00f6 1344     		add	r3, r3, r2
 336 00f8 3833     		adds	r3, r3, #56
 337 00fa 0A46     		mov	r2, r1
 338 00fc 1A70     		strb	r2, [r3]
  98:katrng.c      ****                 break;
 339              		.loc 1 98 17
 340 00fe 05E0     		b	.L8
 341              	.L15:
  93:katrng.c      ****             if ( ctx->ctr[i] == 0xff )
 342              		.loc 1 93 32 discriminator 2
 343 0100 3B69     		ldr	r3, [r7, #16]
 344 0102 013B     		subs	r3, r3, #1
 345 0104 3B61     		str	r3, [r7, #16]
 346              	.L10:
  93:katrng.c      ****             if ( ctx->ctr[i] == 0xff )
 347              		.loc 1 93 9 discriminator 1
 348 0106 3B69     		ldr	r3, [r7, #16]
 349 0108 0B2B     		cmp	r3, #11
 350 010a DDDC     		bgt	.L13
 351              	.L8:
 352              	.LBE2:
  76:katrng.c      ****         if ( xlen <= (16U-ctx->buffer_pos) ) { // buffer has what we need
 353              		.loc 1 76 11
 354 010c 7B68     		ldr	r3, [r7, #4]
 355 010e 002B     		cmp	r3, #0
 356 0110 93D1     		bne	.L14
  99:katrng.c      ****             }
 100:katrng.c      ****         }
 101:katrng.c      ****         
 102:katrng.c      ****     }
 103:katrng.c      ****     
 104:katrng.c      ****     return RNG_SUCCESS;
 357              		.loc 1 104 12
 358 0112 0023     		movs	r3, #0
 359              	.L6:
 105:katrng.c      **** }
 360              		.loc 1 105 1
 361 0114 1846     		mov	r0, r3
 362 0116 1837     		adds	r7, r7, #24
 363              	.LCFI8:
 364              		.cfi_def_cfa_offset 8
 365 0118 BD46     		mov	sp, r7
 366              	.LCFI9:
 367              		.cfi_def_cfa_register 13
 368              		@ sp needed
 369 011a 80BD     		pop	{r7, pc}
 370              		.cfi_endproc
 371              	.LFE4:
 373              		.section	.text.randombytes_init,"ax",%progbits
 374              		.align	1
 375              		.global	randombytes_init
 376              		.syntax unified
 377              		.thumb
 378              		.thumb_func
 379              		.fpu softvfp
 381              	randombytes_init:
 382              	.LFB5:
 106:katrng.c      **** 
 107:katrng.c      **** #if 0
 108:katrng.c      **** /* removed -- replaced with custom AES implementation below */
 109:katrng.c      **** void handleErrors(void)
 110:katrng.c      **** {
 111:katrng.c      ****     ERR_print_errors_fp(stderr);
 112:katrng.c      ****     abort();
 113:katrng.c      **** }
 114:katrng.c      **** 
 115:katrng.c      **** // Use whatever AES implementation you have. This uses AES from openSSL library
 116:katrng.c      **** //    key - 256-bit AES key
 117:katrng.c      **** //    ctr - a 128-bit plaintext value
 118:katrng.c      **** //    buffer - a 128-bit ciphertext value
 119:katrng.c      **** void
 120:katrng.c      **** AES256_ECB(unsigned char *key, unsigned char *ctr, unsigned char *buffer)
 121:katrng.c      **** {
 122:katrng.c      ****     EVP_CIPHER_CTX *ctx;
 123:katrng.c      ****     
 124:katrng.c      ****     int len;
 125:katrng.c      ****     
 126:katrng.c      ****     /* Create and initialise the context */
 127:katrng.c      ****     if(!(ctx = EVP_CIPHER_CTX_new())) handleErrors();
 128:katrng.c      ****     
 129:katrng.c      ****     if(1 != EVP_EncryptInit_ex(ctx, EVP_aes_256_ecb(), NULL, key, NULL))
 130:katrng.c      ****         handleErrors();
 131:katrng.c      ****     
 132:katrng.c      ****     if(1 != EVP_EncryptUpdate(ctx, buffer, &len, ctr, 16))
 133:katrng.c      ****         handleErrors();
 134:katrng.c      ****     
 135:katrng.c      ****     /* Clean up */
 136:katrng.c      ****     EVP_CIPHER_CTX_free(ctx);
 137:katrng.c      **** }
 138:katrng.c      **** #endif
 139:katrng.c      **** 
 140:katrng.c      **** void
 141:katrng.c      **** randombytes_init(unsigned char *entropy_input,
 142:katrng.c      ****                  unsigned char *personalization_string,
 143:katrng.c      ****                  int security_strength)
 144:katrng.c      **** {
 383              		.loc 1 144 1
 384              		.cfi_startproc
 385              		@ args = 0, pretend = 0, frame = 72
 386              		@ frame_needed = 1, uses_anonymous_args = 0
 387 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 388              	.LCFI10:
 389              		.cfi_def_cfa_offset 20
 390              		.cfi_offset 4, -20
 391              		.cfi_offset 5, -16
 392              		.cfi_offset 6, -12
 393              		.cfi_offset 7, -8
 394              		.cfi_offset 14, -4
 395 0002 93B0     		sub	sp, sp, #76
 396              	.LCFI11:
 397              		.cfi_def_cfa_offset 96
 398 0004 00AF     		add	r7, sp, #0
 399              	.LCFI12:
 400              		.cfi_def_cfa_register 7
 401 0006 F860     		str	r0, [r7, #12]
 402 0008 B960     		str	r1, [r7, #8]
 403 000a 7A60     		str	r2, [r7, #4]
 145:katrng.c      **** 	//static unsigned char       entropy_input[48];
 146:katrng.c      ****     unsigned char   seed_material[48];
 147:katrng.c      ****     
 148:katrng.c      ****     (void)security_strength;
 149:katrng.c      **** 
 150:katrng.c      **** 	// memcpyë <string.h> íì¼ì ì ì¸ëì´ ìë í¨ì­ëã.
 151:katrng.c      **** 	// seed_materail ì£¼ìì entropy_input ê°ì 48ê° ë³µì¬íë¤.
 152:katrng.c      **** 
 153:katrng.c      ****     memcpy(seed_material, entropy_input, 48);
 404              		.loc 1 153 5
 405 000c FB68     		ldr	r3, [r7, #12]
 406 000e 1C46     		mov	r4, r3
 407 0010 07F11406 		add	r6, r7, #20
 408 0014 04F1300C 		add	ip, r4, #48
 409              	.L17:
 410 0018 3546     		mov	r5, r6
 411 001a 2346     		mov	r3, r4
 412 001c 1868     		ldr	r0, [r3]	@ unaligned
 413 001e 5968     		ldr	r1, [r3, #4]	@ unaligned
 414 0020 9A68     		ldr	r2, [r3, #8]	@ unaligned
 415 0022 DB68     		ldr	r3, [r3, #12]	@ unaligned
 416 0024 0FC5     		stmia	r5!, {r0, r1, r2, r3}
 417 0026 1034     		adds	r4, r4, #16
 418 0028 1036     		adds	r6, r6, #16
 419 002a 6445     		cmp	r4, ip
 420 002c F4D1     		bne	.L17
 154:katrng.c      **** 
 155:katrng.c      **** 	// íì¬ ê°ììë personaliztion_stringì´ NULL ê°ì´ê¸° ëë¬¸ì
 156:katrng.c      **** 	// ì´ ë¶ë¶ì´ ì¤íëì§ ìëë¤.
 157:katrng.c      ****     if (personalization_string)
 421              		.loc 1 157 8
 422 002e BB68     		ldr	r3, [r7, #8]
 423 0030 002B     		cmp	r3, #0
 424 0032 19D0     		beq	.L18
 425              	.LBB3:
 158:katrng.c      ****         for (int i=0; i<48; i++)
 426              		.loc 1 158 18
 427 0034 0023     		movs	r3, #0
 428 0036 7B64     		str	r3, [r7, #68]
 429              		.loc 1 158 9
 430 0038 13E0     		b	.L19
 431              	.L20:
 159:katrng.c      ****             seed_material[i] ^= personalization_string[i];
 432              		.loc 1 159 30 discriminator 3
 433 003a 07F11402 		add	r2, r7, #20
 434 003e 7B6C     		ldr	r3, [r7, #68]
 435 0040 1344     		add	r3, r3, r2
 436 0042 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 437              		.loc 1 159 55 discriminator 3
 438 0044 7B6C     		ldr	r3, [r7, #68]
 439 0046 B968     		ldr	r1, [r7, #8]
 440 0048 0B44     		add	r3, r3, r1
 441 004a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 442              		.loc 1 159 30 discriminator 3
 443 004c 5340     		eors	r3, r3, r2
 444 004e D9B2     		uxtb	r1, r3
 445 0050 07F11402 		add	r2, r7, #20
 446 0054 7B6C     		ldr	r3, [r7, #68]
 447 0056 1344     		add	r3, r3, r2
 448 0058 0A46     		mov	r2, r1
 449 005a 1A70     		strb	r2, [r3]
 158:katrng.c      ****         for (int i=0; i<48; i++)
 450              		.loc 1 158 30 discriminator 3
 451 005c 7B6C     		ldr	r3, [r7, #68]
 452 005e 0133     		adds	r3, r3, #1
 453 0060 7B64     		str	r3, [r7, #68]
 454              	.L19:
 158:katrng.c      ****         for (int i=0; i<48; i++)
 455              		.loc 1 158 9 discriminator 1
 456 0062 7B6C     		ldr	r3, [r7, #68]
 457 0064 2F2B     		cmp	r3, #47
 458 0066 E8DD     		ble	.L20
 459              	.L18:
 460              	.LBE3:
 160:katrng.c      **** 
 161:katrng.c      **** 	/*
 162:katrng.c      **** 	typedef struct {
 163:katrng.c      ****     unsigned char   Key[32];
 164:katrng.c      ****     unsigned char   V[16];
 165:katrng.c      ****     int             reseed_counter;
 166:katrng.c      **** 	} AES256_CTR_DRBG_struct;
 167:katrng.c      **** 	*/
 168:katrng.c      **** 
 169:katrng.c      **** 	// memcpyë ì£¼ìì ìë ê°ë¤ì ë¤ë¥¸ ì£¼ìì ë³µì¬íë ì­í ì íë ì­í ì´ë
 170:katrng.c      **** 	// memsetì ë´ê° ìíë ì£¼ìì ìíë ê°ì¼ë¡ ì¸íí  ì ìë¤.
 171:katrng.c      **** 	// ì¬ê¸°ììë 0x00(0)ì ê°ì¼ë¡ 32ê¸¸ì´ or 16ê¸¸ì´ ë§í¼ ì´ê¸°íë¥¼ í´ì£¼ìë¤.
 172:katrng.c      **** 
 173:katrng.c      ****     memset(DRBG_ctx.Key, 0x00, 32);
 461              		.loc 1 173 5
 462 0068 2022     		movs	r2, #32
 463 006a 0021     		movs	r1, #0
 464 006c 0A48     		ldr	r0, .L21
 465 006e FFF7FEFF 		bl	memset
 174:katrng.c      ****     memset(DRBG_ctx.V, 0x00, 16);
 466              		.loc 1 174 5
 467 0072 1022     		movs	r2, #16
 468 0074 0021     		movs	r1, #0
 469 0076 0948     		ldr	r0, .L21+4
 470 0078 FFF7FEFF 		bl	memset
 175:katrng.c      **** 
 176:katrng.c      **** 
 177:katrng.c      **** 	// seed_materialììë ì°ë¦¬ê° ììì entropy_inputì ìë ê°ë¤ì ë³µì¬íë¤.
 178:katrng.c      **** 	// DRBG_ctx.Key
 179:katrng.c      **** 	// DRBGê° ëì ììê¸°ë¼ê³  íë¤. AESë¥¼ íµí´ì ëìë¥¼ ìì±íë ê²ì¼ë¡ ë³´ì¸
 180:katrng.c      ****     AES256_CTR_DRBG_Update(seed_material, DRBG_ctx.Key, DRBG_ctx.V);
 471              		.loc 1 180 5
 472 007c 07F11403 		add	r3, r7, #20
 473 0080 064A     		ldr	r2, .L21+4
 474 0082 0549     		ldr	r1, .L21
 475 0084 1846     		mov	r0, r3
 476 0086 FFF7FEFF 		bl	AES256_CTR_DRBG_Update
 181:katrng.c      **** 
 182:katrng.c      ****     DRBG_ctx.reseed_counter = 1;
 477              		.loc 1 182 29
 478 008a 034B     		ldr	r3, .L21
 479 008c 0122     		movs	r2, #1
 480 008e 1A63     		str	r2, [r3, #48]
 183:katrng.c      **** }
 481              		.loc 1 183 1
 482 0090 00BF     		nop
 483 0092 4C37     		adds	r7, r7, #76
 484              	.LCFI13:
 485              		.cfi_def_cfa_offset 20
 486 0094 BD46     		mov	sp, r7
 487              	.LCFI14:
 488              		.cfi_def_cfa_register 13
 489              		@ sp needed
 490 0096 F0BD     		pop	{r4, r5, r6, r7, pc}
 491              	.L22:
 492              		.align	2
 493              	.L21:
 494 0098 00000000 		.word	DRBG_ctx
 495 009c 20000000 		.word	DRBG_ctx+32
 496              		.cfi_endproc
 497              	.LFE5:
 499              		.section	.text.randombytes,"ax",%progbits
 500              		.align	1
 501              		.global	randombytes
 502              		.syntax unified
 503              		.thumb
 504              		.thumb_func
 505              		.fpu softvfp
 507              	randombytes:
 508              	.LFB6:
 184:katrng.c      **** 
 185:katrng.c      **** 
 186:katrng.c      **** int
 187:katrng.c      **** randombytes(unsigned char *x, unsigned long long xlen)
 188:katrng.c      **** {
 509              		.loc 1 188 1
 510              		.cfi_startproc
 511              		@ args = 0, pretend = 0, frame = 40
 512              		@ frame_needed = 1, uses_anonymous_args = 0
 513 0000 2DE9B043 		push	{r4, r5, r7, r8, r9, lr}
 514              	.LCFI15:
 515              		.cfi_def_cfa_offset 24
 516              		.cfi_offset 4, -24
 517              		.cfi_offset 5, -20
 518              		.cfi_offset 7, -16
 519              		.cfi_offset 8, -12
 520              		.cfi_offset 9, -8
 521              		.cfi_offset 14, -4
 522 0004 8AB0     		sub	sp, sp, #40
 523              	.LCFI16:
 524              		.cfi_def_cfa_offset 64
 525 0006 00AF     		add	r7, sp, #0
 526              	.LCFI17:
 527              		.cfi_def_cfa_register 7
 528 0008 F860     		str	r0, [r7, #12]
 529 000a C7E90023 		strd	r2, [r7]
 189:katrng.c      ****     unsigned char   block[16];
 190:katrng.c      ****     int             i = 0;
 530              		.loc 1 190 21
 531 000e 0023     		movs	r3, #0
 532 0010 7B62     		str	r3, [r7, #36]
 191:katrng.c      **** 
 192:katrng.c      ****     while ( xlen > 0 ) {
 533              		.loc 1 192 11
 534 0012 57E0     		b	.L24
 535              	.L31:
 536              	.LBB4:
 193:katrng.c      ****         //increment V
 194:katrng.c      ****         for (int j=15; j>=0; j--) {
 537              		.loc 1 194 18
 538 0014 0F23     		movs	r3, #15
 539 0016 3B62     		str	r3, [r7, #32]
 540              		.loc 1 194 9
 541 0018 1EE0     		b	.L25
 542              	.L29:
 195:katrng.c      ****             if ( DRBG_ctx.V[j] == 0xff )
 543              		.loc 1 195 28
 544 001a 344A     		ldr	r2, .L34
 545 001c 3B6A     		ldr	r3, [r7, #32]
 546 001e 1344     		add	r3, r3, r2
 547 0020 2033     		adds	r3, r3, #32
 548 0022 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 549              		.loc 1 195 16
 550 0024 FF2B     		cmp	r3, #255
 551 0026 06D1     		bne	.L26
 196:katrng.c      ****                 DRBG_ctx.V[j] = 0x00;
 552              		.loc 1 196 31
 553 0028 304A     		ldr	r2, .L34
 554 002a 3B6A     		ldr	r3, [r7, #32]
 555 002c 1344     		add	r3, r3, r2
 556 002e 2033     		adds	r3, r3, #32
 557 0030 0022     		movs	r2, #0
 558 0032 1A70     		strb	r2, [r3]
 559 0034 0DE0     		b	.L33
 560              	.L26:
 197:katrng.c      ****             else {
 198:katrng.c      ****                 DRBG_ctx.V[j]++;
 561              		.loc 1 198 27
 562 0036 2D4A     		ldr	r2, .L34
 563 0038 3B6A     		ldr	r3, [r7, #32]
 564 003a 1344     		add	r3, r3, r2
 565 003c 2033     		adds	r3, r3, #32
 566 003e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 567              		.loc 1 198 30
 568 0040 0133     		adds	r3, r3, #1
 569 0042 D9B2     		uxtb	r1, r3
 570 0044 294A     		ldr	r2, .L34
 571 0046 3B6A     		ldr	r3, [r7, #32]
 572 0048 1344     		add	r3, r3, r2
 573 004a 2033     		adds	r3, r3, #32
 574 004c 0A46     		mov	r2, r1
 575 004e 1A70     		strb	r2, [r3]
 199:katrng.c      ****                 break;
 576              		.loc 1 199 17
 577 0050 05E0     		b	.L28
 578              	.L33:
 194:katrng.c      ****             if ( DRBG_ctx.V[j] == 0xff )
 579              		.loc 1 194 31 discriminator 2
 580 0052 3B6A     		ldr	r3, [r7, #32]
 581 0054 013B     		subs	r3, r3, #1
 582 0056 3B62     		str	r3, [r7, #32]
 583              	.L25:
 194:katrng.c      ****             if ( DRBG_ctx.V[j] == 0xff )
 584              		.loc 1 194 9 discriminator 1
 585 0058 3B6A     		ldr	r3, [r7, #32]
 586 005a 002B     		cmp	r3, #0
 587 005c DDDA     		bge	.L29
 588              	.L28:
 589              	.LBE4:
 200:katrng.c      ****             }
 201:katrng.c      ****         }
 202:katrng.c      **** 
 203:katrng.c      ****         AES256_ECB(DRBG_ctx.Key, DRBG_ctx.V, block);
 590              		.loc 1 203 9
 591 005e 07F11003 		add	r3, r7, #16
 592 0062 1A46     		mov	r2, r3
 593 0064 2249     		ldr	r1, .L34+4
 594 0066 2148     		ldr	r0, .L34
 595 0068 FFF7FEFF 		bl	AES256_ECB
 204:katrng.c      ****         if ( xlen > 15 ) {
 596              		.loc 1 204 12
 597 006c D7E90023 		ldrd	r2, [r7]
 598 0070 102A     		cmp	r2, #16
 599 0072 73F10003 		sbcs	r3, r3, #0
 600 0076 16D3     		bcc	.L30
 205:katrng.c      ****             memcpy(x+i, block, 16);
 601              		.loc 1 205 13
 602 0078 7B6A     		ldr	r3, [r7, #36]
 603              		.loc 1 205 21
 604 007a FA68     		ldr	r2, [r7, #12]
 605 007c 1344     		add	r3, r3, r2
 606              		.loc 1 205 13
 607 007e 1D46     		mov	r5, r3
 608 0080 07F11004 		add	r4, r7, #16
 609 0084 0FCC     		ldmia	r4!, {r0, r1, r2, r3}
 610 0086 2860     		str	r0, [r5]	@ unaligned
 611 0088 6960     		str	r1, [r5, #4]	@ unaligned
 612 008a AA60     		str	r2, [r5, #8]	@ unaligned
 613 008c EB60     		str	r3, [r5, #12]	@ unaligned
 206:katrng.c      ****             i += 16;
 614              		.loc 1 206 15
 615 008e 7B6A     		ldr	r3, [r7, #36]
 616 0090 1033     		adds	r3, r3, #16
 617 0092 7B62     		str	r3, [r7, #36]
 207:katrng.c      ****             xlen -= 16;
 618              		.loc 1 207 18
 619 0094 D7E90023 		ldrd	r2, [r7]
 620 0098 B2F11008 		subs	r8, r2, #16
 621 009c 43F1FF39 		adc	r9, r3, #-1
 622 00a0 C7E90089 		strd	r8, [r7]
 623 00a4 0EE0     		b	.L24
 624              	.L30:
 208:katrng.c      ****         }
 209:katrng.c      ****         else {
 210:katrng.c      ****             memcpy(x+i, block, xlen);
 625              		.loc 1 210 13
 626 00a6 7B6A     		ldr	r3, [r7, #36]
 627              		.loc 1 210 21
 628 00a8 FA68     		ldr	r2, [r7, #12]
 629 00aa 1344     		add	r3, r3, r2
 630              		.loc 1 210 13
 631 00ac 3A68     		ldr	r2, [r7]
 632 00ae 07F11001 		add	r1, r7, #16
 633 00b2 1846     		mov	r0, r3
 634 00b4 FFF7FEFF 		bl	memcpy
 211:katrng.c      ****             xlen = 0;
 635              		.loc 1 211 18
 636 00b8 4FF00002 		mov	r2, #0
 637 00bc 4FF00003 		mov	r3, #0
 638 00c0 C7E90023 		strd	r2, [r7]
 639              	.L24:
 192:katrng.c      ****         //increment V
 640              		.loc 1 192 11
 641 00c4 D7E90023 		ldrd	r2, [r7]
 642 00c8 1343     		orrs	r3, r2, r3
 643 00ca A3D1     		bne	.L31
 212:katrng.c      ****         }
 213:katrng.c      ****     }
 214:katrng.c      ****     AES256_CTR_DRBG_Update(NULL, DRBG_ctx.Key, DRBG_ctx.V);
 644              		.loc 1 214 5
 645 00cc 084A     		ldr	r2, .L34+4
 646 00ce 0749     		ldr	r1, .L34
 647 00d0 0020     		movs	r0, #0
 648 00d2 FFF7FEFF 		bl	AES256_CTR_DRBG_Update
 215:katrng.c      **** 
 216:katrng.c      ****     DRBG_ctx.reseed_counter++;
 649              		.loc 1 216 13
 650 00d6 054B     		ldr	r3, .L34
 651 00d8 1B6B     		ldr	r3, [r3, #48]
 652              		.loc 1 216 28
 653 00da 0133     		adds	r3, r3, #1
 654 00dc 034A     		ldr	r2, .L34
 655 00de 1363     		str	r3, [r2, #48]
 217:katrng.c      **** 
 218:katrng.c      ****     return RNG_SUCCESS;
 656              		.loc 1 218 12
 657 00e0 0023     		movs	r3, #0
 219:katrng.c      **** }
 658              		.loc 1 219 1
 659 00e2 1846     		mov	r0, r3
 660 00e4 2837     		adds	r7, r7, #40
 661              	.LCFI18:
 662              		.cfi_def_cfa_offset 24
 663 00e6 BD46     		mov	sp, r7
 664              	.LCFI19:
 665              		.cfi_def_cfa_register 13
 666              		@ sp needed
 667 00e8 BDE8B083 		pop	{r4, r5, r7, r8, r9, pc}
 668              	.L35:
 669              		.align	2
 670              	.L34:
 671 00ec 00000000 		.word	DRBG_ctx
 672 00f0 20000000 		.word	DRBG_ctx+32
 673              		.cfi_endproc
 674              	.LFE6:
 676              		.section	.text.AES256_CTR_DRBG_Update,"ax",%progbits
 677              		.align	1
 678              		.global	AES256_CTR_DRBG_Update
 679              		.syntax unified
 680              		.thumb
 681              		.thumb_func
 682              		.fpu softvfp
 684              	AES256_CTR_DRBG_Update:
 685              	.LFB7:
 220:katrng.c      **** 
 221:katrng.c      **** 
 222:katrng.c      **** // AES256_CTR_DRBG_Updateì ëª©ì ì
 223:katrng.c      **** // DBRG ê°ì Keyì Vë¥¼ AES256_ECBë¥¼ íµí´ì ë§ë  48ë°ì´í¸ ê°ì¼ë¡
 224:katrng.c      **** // ì´ê¸°í ìì¼ì£¼ë ì­í ì íë¤. 
 225:katrng.c      **** void
 226:katrng.c      **** AES256_CTR_DRBG_Update(unsigned char *provided_data,
 227:katrng.c      ****                        unsigned char *Key,
 228:katrng.c      ****                        unsigned char *V)
 229:katrng.c      **** {	
 686              		.loc 1 229 1
 687              		.cfi_startproc
 688              		@ args = 0, pretend = 0, frame = 80
 689              		@ frame_needed = 1, uses_anonymous_args = 0
 690 0000 80B5     		push	{r7, lr}
 691              	.LCFI20:
 692              		.cfi_def_cfa_offset 8
 693              		.cfi_offset 7, -8
 694              		.cfi_offset 14, -4
 695 0002 94B0     		sub	sp, sp, #80
 696              	.LCFI21:
 697              		.cfi_def_cfa_offset 88
 698 0004 00AF     		add	r7, sp, #0
 699              	.LCFI22:
 700              		.cfi_def_cfa_register 7
 701 0006 F860     		str	r0, [r7, #12]
 702 0008 B960     		str	r1, [r7, #8]
 703 000a 7A60     		str	r2, [r7, #4]
 704              	.LBB5:
 230:katrng.c      **** 	// ì¬ê¸° ë¤ì´ì¬ ëë DRBG_ctx.keyì DRBG_ctx.Vë 0ì¼ë¡ ì´ê¸°í ëì´ìë¤. 
 231:katrng.c      **** 	// AES256_CTR_DRBG_Update(seed_material, DRBG_ctx.Key, DRBG_ctx.V);
 232:katrng.c      **** 	// provided_data = seed_materialì´ë¤. ì¬ê¸°ììë 0~47ê¹ì§ ì´ê¸°íë ê°ì´ ë¤ì´ê°ë
 233:katrng.c      **** 	// ì´ë seed_materialê°ì entropy_input ê°ìì ê°ì ¸ì¨ ê²ì´ë¤.
 234:katrng.c      ****     unsigned char   temp[48];
 235:katrng.c      ****     
 236:katrng.c      **** 
 237:katrng.c      ****     for (int i=0; i<3; i++) {
 705              		.loc 1 237 14
 706 000c 0023     		movs	r3, #0
 707 000e FB64     		str	r3, [r7, #76]
 708              		.loc 1 237 5
 709 0010 2AE0     		b	.L37
 710              	.L43:
 711              	.LBB6:
 238:katrng.c      ****         //increment V
 239:katrng.c      **** 		// ì¬ê¸°ìì V[j]ê°ì ìì íë¤. V[j]ë 1ì©ë§ ì¬ë¦¬ê³  ë°ë¡ ë°ë³µë¬¸ì ëê°ë¤.
 240:katrng.c      ****         for (int j=15; j>=0; j--) {
 712              		.loc 1 240 18
 713 0012 0F23     		movs	r3, #15
 714 0014 BB64     		str	r3, [r7, #72]
 715              		.loc 1 240 9
 716 0016 16E0     		b	.L38
 717              	.L42:
 241:katrng.c      ****             if ( V[j] == 0xff )
 718              		.loc 1 241 19
 719 0018 BB6C     		ldr	r3, [r7, #72]
 720 001a 7A68     		ldr	r2, [r7, #4]
 721 001c 1344     		add	r3, r3, r2
 722 001e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 723              		.loc 1 241 16
 724 0020 FF2B     		cmp	r3, #255
 725 0022 05D1     		bne	.L39
 242:katrng.c      ****                 V[j] = 0x00;
 726              		.loc 1 242 18
 727 0024 BB6C     		ldr	r3, [r7, #72]
 728 0026 7A68     		ldr	r2, [r7, #4]
 729 0028 1344     		add	r3, r3, r2
 730              		.loc 1 242 22
 731 002a 0022     		movs	r2, #0
 732 002c 1A70     		strb	r2, [r3]
 733 002e 07E0     		b	.L47
 734              	.L39:
 243:katrng.c      ****             else {
 244:katrng.c      ****                 V[j]++;
 735              		.loc 1 244 18
 736 0030 BB6C     		ldr	r3, [r7, #72]
 737 0032 7A68     		ldr	r2, [r7, #4]
 738 0034 1344     		add	r3, r3, r2
 739 0036 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 740              		.loc 1 244 21
 741 0038 0132     		adds	r2, r2, #1
 742 003a D2B2     		uxtb	r2, r2
 743 003c 1A70     		strb	r2, [r3]
 245:katrng.c      ****                 break;
 744              		.loc 1 245 17
 745 003e 05E0     		b	.L41
 746              	.L47:
 240:katrng.c      ****             if ( V[j] == 0xff )
 747              		.loc 1 240 31 discriminator 2
 748 0040 BB6C     		ldr	r3, [r7, #72]
 749 0042 013B     		subs	r3, r3, #1
 750 0044 BB64     		str	r3, [r7, #72]
 751              	.L38:
 240:katrng.c      ****             if ( V[j] == 0xff )
 752              		.loc 1 240 9 discriminator 1
 753 0046 BB6C     		ldr	r3, [r7, #72]
 754 0048 002B     		cmp	r3, #0
 755 004a E5DA     		bge	.L42
 756              	.L41:
 757              	.LBE6:
 246:katrng.c      ****             }
 247:katrng.c      ****         }
 248:katrng.c      **** 		// V[j]ê°ì ì¦ê° ìí¤ê³  ëì ìííë í¨ì ë¶ë¶ì´ë¤.
 249:katrng.c      **** 		// ìëì ë¶ë¶ì ì´ 3ë²ì ê±°ì³ì ìíì íë¤.
 250:katrng.c      **** 		// ì²« ë²ì§¸ í¸ì¶ ììë
 251:katrng.c      **** 		// Keyì ê°ì ê·¸ëë¡ 0ì´ê³  Vê°ì ììì 1ì´ ì¦ê°íë¤.
 252:katrng.c      **** 		// tempì 0~15 / 16~31 / 32~47 ì ê°ì ë°°ì´ì ê°ë¤ì´ ë¤ì´ê°ë¤.
 253:katrng.c      **** 		// ì´ê²ì ì´ 3ë² ê±°ì³ì tempì ìë 48ë°ì´í¸ ê° ëª¨ëë¥¼ ìì íë¤.
 254:katrng.c      ****         AES256_ECB(Key, V, temp+16*i);
 758              		.loc 1 254 35 discriminator 2
 759 004c FB6C     		ldr	r3, [r7, #76]
 760 004e 1B01     		lsls	r3, r3, #4
 761 0050 1A46     		mov	r2, r3
 762              		.loc 1 254 9 discriminator 2
 763 0052 07F11403 		add	r3, r7, #20
 764 0056 1344     		add	r3, r3, r2
 765 0058 1A46     		mov	r2, r3
 766 005a 7968     		ldr	r1, [r7, #4]
 767 005c B868     		ldr	r0, [r7, #8]
 768 005e FFF7FEFF 		bl	AES256_ECB
 237:katrng.c      ****         //increment V
 769              		.loc 1 237 25 discriminator 2
 770 0062 FB6C     		ldr	r3, [r7, #76]
 771 0064 0133     		adds	r3, r3, #1
 772 0066 FB64     		str	r3, [r7, #76]
 773              	.L37:
 237:katrng.c      ****         //increment V
 774              		.loc 1 237 5 discriminator 1
 775 0068 FB6C     		ldr	r3, [r7, #76]
 776 006a 022B     		cmp	r3, #2
 777 006c D1DD     		ble	.L43
 778              	.LBE5:
 255:katrng.c      **** 	
 256:katrng.c      ****     }
 257:katrng.c      **** 
 258:katrng.c      ****     if ( provided_data != NULL )
 779              		.loc 1 258 8
 780 006e FB68     		ldr	r3, [r7, #12]
 781 0070 002B     		cmp	r3, #0
 782 0072 19D0     		beq	.L44
 783              	.LBB7:
 259:katrng.c      ****         for (int i=0; i<48; i++)
 784              		.loc 1 259 18
 785 0074 0023     		movs	r3, #0
 786 0076 7B64     		str	r3, [r7, #68]
 787              		.loc 1 259 9
 788 0078 13E0     		b	.L45
 789              	.L46:
 260:katrng.c      ****             temp[i] ^= provided_data[i];
 790              		.loc 1 260 21 discriminator 3
 791 007a 07F11402 		add	r2, r7, #20
 792 007e 7B6C     		ldr	r3, [r7, #68]
 793 0080 1344     		add	r3, r3, r2
 794 0082 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 795              		.loc 1 260 37 discriminator 3
 796 0084 7B6C     		ldr	r3, [r7, #68]
 797 0086 F968     		ldr	r1, [r7, #12]
 798 0088 0B44     		add	r3, r3, r1
 799 008a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 800              		.loc 1 260 21 discriminator 3
 801 008c 5340     		eors	r3, r3, r2
 802 008e D9B2     		uxtb	r1, r3
 803 0090 07F11402 		add	r2, r7, #20
 804 0094 7B6C     		ldr	r3, [r7, #68]
 805 0096 1344     		add	r3, r3, r2
 806 0098 0A46     		mov	r2, r1
 807 009a 1A70     		strb	r2, [r3]
 259:katrng.c      ****         for (int i=0; i<48; i++)
 808              		.loc 1 259 30 discriminator 3
 809 009c 7B6C     		ldr	r3, [r7, #68]
 810 009e 0133     		adds	r3, r3, #1
 811 00a0 7B64     		str	r3, [r7, #68]
 812              	.L45:
 259:katrng.c      ****         for (int i=0; i<48; i++)
 813              		.loc 1 259 9 discriminator 1
 814 00a2 7B6C     		ldr	r3, [r7, #68]
 815 00a4 2F2B     		cmp	r3, #47
 816 00a6 E8DD     		ble	.L46
 817              	.L44:
 818              	.LBE7:
 261:katrng.c      **** 
 262:katrng.c      **** 	// AES256_CTR_DRBG_struct êµ¬ì¡°ì²´ì ìë
 263:katrng.c      **** 	// Keyê°ê³¼ V ê°ì ìì AES256_EBCë¥¼ íµí´ì ë§ë  tempë¥¼ íµí´ ì´ê¸°íí¨
 264:katrng.c      **** 	// tempì ìì 32ë°ì´í¸ê° Keyê° ëë¤.
 265:katrng.c      **** 	// tempì ë¤ì 16ë°ì´í¸ê° Vê° ëë¤.
 266:katrng.c      ****     memcpy(Key, temp, 32);
 819              		.loc 1 266 5
 820 00a8 07F11403 		add	r3, r7, #20
 821 00ac 2022     		movs	r2, #32
 822 00ae 1946     		mov	r1, r3
 823 00b0 B868     		ldr	r0, [r7, #8]
 824 00b2 FFF7FEFF 		bl	memcpy
 267:katrng.c      ****     memcpy(V, temp+32, 16);
 825              		.loc 1 267 5
 826 00b6 07F11403 		add	r3, r7, #20
 827 00ba 2033     		adds	r3, r3, #32
 828 00bc 1022     		movs	r2, #16
 829 00be 1946     		mov	r1, r3
 830 00c0 7868     		ldr	r0, [r7, #4]
 831 00c2 FFF7FEFF 		bl	memcpy
 268:katrng.c      **** }
 832              		.loc 1 268 1
 833 00c6 00BF     		nop
 834 00c8 5037     		adds	r7, r7, #80
 835              	.LCFI23:
 836              		.cfi_def_cfa_offset 8
 837 00ca BD46     		mov	sp, r7
 838              	.LCFI24:
 839              		.cfi_def_cfa_register 13
 840              		@ sp needed
 841 00cc 80BD     		pop	{r7, pc}
 842              		.cfi_endproc
 843              	.LFE7:
 845              		.section	.text.dec32be,"ax",%progbits
 846              		.align	1
 847              		.syntax unified
 848              		.thumb
 849              		.thumb_func
 850              		.fpu softvfp
 852              	dec32be:
 853              	.LFB8:
 269:katrng.c      **** 
 270:katrng.c      **** /* ===================================================================== */
 271:katrng.c      **** 
 272:katrng.c      **** /*
 273:katrng.c      ****  * Custom perfunctory AES-256 implementation (included to avoid any
 274:katrng.c      ****  * dependency on OpenSSL). This implementation is for tests only; it
 275:katrng.c      ****  * is not constant-time.
 276:katrng.c      ****  */
 277:katrng.c      **** 
 278:katrng.c      **** static inline uint32_t
 279:katrng.c      **** dec32be(const void *src)
 280:katrng.c      **** {
 854              		.loc 1 280 1
 855              		.cfi_startproc
 856              		@ args = 0, pretend = 0, frame = 16
 857              		@ frame_needed = 1, uses_anonymous_args = 0
 858              		@ link register save eliminated.
 859 0000 80B4     		push	{r7}
 860              	.LCFI25:
 861              		.cfi_def_cfa_offset 4
 862              		.cfi_offset 7, -4
 863 0002 85B0     		sub	sp, sp, #20
 864              	.LCFI26:
 865              		.cfi_def_cfa_offset 24
 866 0004 00AF     		add	r7, sp, #0
 867              	.LCFI27:
 868              		.cfi_def_cfa_register 7
 869 0006 7860     		str	r0, [r7, #4]
 281:katrng.c      **** 	const unsigned char *buf;
 282:katrng.c      **** 
 283:katrng.c      **** 	buf = src;
 870              		.loc 1 283 6
 871 0008 7B68     		ldr	r3, [r7, #4]
 872 000a FB60     		str	r3, [r7, #12]
 284:katrng.c      **** 	return ((uint32_t)buf[0] << 24)
 873              		.loc 1 284 23
 874 000c FB68     		ldr	r3, [r7, #12]
 875 000e 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 876              		.loc 1 284 27
 877 0010 1A06     		lsls	r2, r3, #24
 285:katrng.c      **** 		| ((uint32_t)buf[1] << 16)
 878              		.loc 1 285 19
 879 0012 FB68     		ldr	r3, [r7, #12]
 880 0014 0133     		adds	r3, r3, #1
 881 0016 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 882              		.loc 1 285 23
 883 0018 1B04     		lsls	r3, r3, #16
 884              		.loc 1 285 3
 885 001a 1A43     		orrs	r2, r2, r3
 286:katrng.c      **** 		| ((uint32_t)buf[2] << 8)
 886              		.loc 1 286 19
 887 001c FB68     		ldr	r3, [r7, #12]
 888 001e 0233     		adds	r3, r3, #2
 889 0020 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 890              		.loc 1 286 23
 891 0022 1B02     		lsls	r3, r3, #8
 892              		.loc 1 286 3
 893 0024 1343     		orrs	r3, r3, r2
 287:katrng.c      **** 		| (uint32_t)buf[3];
 894              		.loc 1 287 18
 895 0026 FA68     		ldr	r2, [r7, #12]
 896 0028 0332     		adds	r2, r2, #3
 897 002a 1278     		ldrb	r2, [r2]	@ zero_extendqisi2
 898              		.loc 1 287 3
 899 002c 1343     		orrs	r3, r3, r2
 288:katrng.c      **** }
 900              		.loc 1 288 1
 901 002e 1846     		mov	r0, r3
 902 0030 1437     		adds	r7, r7, #20
 903              	.LCFI28:
 904              		.cfi_def_cfa_offset 4
 905 0032 BD46     		mov	sp, r7
 906              	.LCFI29:
 907              		.cfi_def_cfa_register 13
 908              		@ sp needed
 909 0034 80BC     		pop	{r7}
 910              	.LCFI30:
 911              		.cfi_restore 7
 912              		.cfi_def_cfa_offset 0
 913 0036 7047     		bx	lr
 914              		.cfi_endproc
 915              	.LFE8:
 917              		.section	.text.enc32be,"ax",%progbits
 918              		.align	1
 919              		.syntax unified
 920              		.thumb
 921              		.thumb_func
 922              		.fpu softvfp
 924              	enc32be:
 925              	.LFB9:
 289:katrng.c      **** 
 290:katrng.c      **** static inline void
 291:katrng.c      **** enc32be(void *dst, uint32_t x)
 292:katrng.c      **** {
 926              		.loc 1 292 1
 927              		.cfi_startproc
 928              		@ args = 0, pretend = 0, frame = 16
 929              		@ frame_needed = 1, uses_anonymous_args = 0
 930              		@ link register save eliminated.
 931 0000 80B4     		push	{r7}
 932              	.LCFI31:
 933              		.cfi_def_cfa_offset 4
 934              		.cfi_offset 7, -4
 935 0002 85B0     		sub	sp, sp, #20
 936              	.LCFI32:
 937              		.cfi_def_cfa_offset 24
 938 0004 00AF     		add	r7, sp, #0
 939              	.LCFI33:
 940              		.cfi_def_cfa_register 7
 941 0006 7860     		str	r0, [r7, #4]
 942 0008 3960     		str	r1, [r7]
 293:katrng.c      **** 	unsigned char *buf;
 294:katrng.c      **** 
 295:katrng.c      **** 	buf = dst;
 943              		.loc 1 295 6
 944 000a 7B68     		ldr	r3, [r7, #4]
 945 000c FB60     		str	r3, [r7, #12]
 296:katrng.c      **** 	buf[0] = (unsigned char)(x >> 24);
 946              		.loc 1 296 29
 947 000e 3B68     		ldr	r3, [r7]
 948 0010 1B0E     		lsrs	r3, r3, #24
 949              		.loc 1 296 11
 950 0012 DAB2     		uxtb	r2, r3
 951              		.loc 1 296 9
 952 0014 FB68     		ldr	r3, [r7, #12]
 953 0016 1A70     		strb	r2, [r3]
 297:katrng.c      **** 	buf[1] = (unsigned char)(x >> 16);
 954              		.loc 1 297 29
 955 0018 3B68     		ldr	r3, [r7]
 956 001a 1A0C     		lsrs	r2, r3, #16
 957              		.loc 1 297 5
 958 001c FB68     		ldr	r3, [r7, #12]
 959 001e 0133     		adds	r3, r3, #1
 960              		.loc 1 297 11
 961 0020 D2B2     		uxtb	r2, r2
 962              		.loc 1 297 9
 963 0022 1A70     		strb	r2, [r3]
 298:katrng.c      **** 	buf[2] = (unsigned char)(x >> 8);
 964              		.loc 1 298 29
 965 0024 3B68     		ldr	r3, [r7]
 966 0026 1A0A     		lsrs	r2, r3, #8
 967              		.loc 1 298 5
 968 0028 FB68     		ldr	r3, [r7, #12]
 969 002a 0233     		adds	r3, r3, #2
 970              		.loc 1 298 11
 971 002c D2B2     		uxtb	r2, r2
 972              		.loc 1 298 9
 973 002e 1A70     		strb	r2, [r3]
 299:katrng.c      **** 	buf[3] = (unsigned char)x;
 974              		.loc 1 299 5
 975 0030 FB68     		ldr	r3, [r7, #12]
 976 0032 0333     		adds	r3, r3, #3
 977              		.loc 1 299 11
 978 0034 3A68     		ldr	r2, [r7]
 979 0036 D2B2     		uxtb	r2, r2
 980              		.loc 1 299 9
 981 0038 1A70     		strb	r2, [r3]
 300:katrng.c      **** }
 982              		.loc 1 300 1
 983 003a 00BF     		nop
 984 003c 1437     		adds	r7, r7, #20
 985              	.LCFI34:
 986              		.cfi_def_cfa_offset 4
 987 003e BD46     		mov	sp, r7
 988              	.LCFI35:
 989              		.cfi_def_cfa_register 13
 990              		@ sp needed
 991 0040 80BC     		pop	{r7}
 992              	.LCFI36:
 993              		.cfi_restore 7
 994              		.cfi_def_cfa_offset 0
 995 0042 7047     		bx	lr
 996              		.cfi_endproc
 997              	.LFE9:
 999              		.section	.rodata
 1000              		.align	2
 1003              	Rcon:
 1004 0000 00000001 		.word	16777216
 1005 0004 00000002 		.word	33554432
 1006 0008 00000004 		.word	67108864
 1007 000c 00000008 		.word	134217728
 1008 0010 00000010 		.word	268435456
 1009 0014 00000020 		.word	536870912
 1010 0018 00000040 		.word	1073741824
 1011 001c 00000080 		.word	-2147483648
 1012 0020 0000001B 		.word	452984832
 1013 0024 00000036 		.word	905969664
 1014              		.align	2
 1017              	S:
 1018 0028 637C777B 		.ascii	"c|w{\362ko\3050\001g+\376\327\253v\312\202\311}\372"
 1018      F26B6FC5 
 1018      3001672B 
 1018      FED7AB76 
 1018      CA82C97D 
 1019 003d 5947F0AD 		.ascii	"YG\360\255\324\242\257\234\244r\300\267\375\223&6?\367"
 1019      D4A2AF9C 
 1019      A472C0B7 
 1019      FD932636 
 1019      3FF7
 1020 004f CC34A5E5 		.ascii	"\3144\245\345\361q\3301\025\004\307#\303\030\226\005"
 1020      F171D831 
 1020      1504C723 
 1020      C3189605 
 1021 005f 9A071280 		.ascii	"\232\007\022\200\342\353'\262u\011\203,\032\033nZ\240"
 1021      E2EB27B2 
 1021      7509832C 
 1021      1A1B6E5A 
 1021      A0
 1022 0070 523BD6B3 		.ascii	"R;\326\263)\343/\204S\321\000\355 \374\261[j\313\276"
 1022      29E32F84 
 1022      53D100ED 
 1022      20FCB15B 
 1022      6ACBBE
 1023 0083 394A4C58 		.ascii	"9JLX\317\320\357\252\373CM3\205E\371\002\177P<\237\250"
 1023      CFD0EFAA 
 1023      FB434D33 
 1023      8545F902 
 1023      7F503C9F 
 1024 0098 51A3408F 		.ascii	"Q\243@\217\222\2358\365\274\266\332!\020\377\363\322"
 1024      929D38F5 
 1024      BCB6DA21 
 1024      10FFF3D2 
 1025 00a8 CD0C13EC 		.ascii	"\315\014\023\354_\227D\027\304\247~=d]\031s`\201O\334"
 1025      5F974417 
 1025      C4A77E3D 
 1025      645D1973 
 1025      60814FDC 
 1026 00bc 222A9088 		.ascii	"\"*\220\210F\356\270\024\336^\013\333\3402:\012I\006"
 1026      46EEB814 
 1026      DE5E0BDB 
 1026      E0323A0A 
 1026      4906
 1027 00ce 245CC2D3 		.ascii	"$\\\302\323\254b\221\225\344y\347\3107m\215\325N\251"
 1027      AC629195 
 1027      E479E7C8 
 1027      376D8DD5 
 1027      4EA9
 1028 00e0 6C56F4EA 		.ascii	"lV\364\352ez\256\010\272x%.\034\246\264\306\350\335"
 1028      657AAE08 
 1028      BA78252E 
 1028      1CA6B4C6 
 1028      E8DD
 1029 00f2 741F4BBD 		.ascii	"t\037K\275\213\212p>\265fH\003\366\016a5W\271\206\301"
 1029      8B8A703E 
 1029      B5664803 
 1029      F60E6135 
 1029      57B986C1 
 1030 0106 1D9EE1F8 		.ascii	"\035\236\341\370\230\021i\331\216\224\233\036\207\351"
 1030      981169D9 
 1030      8E949B1E 
 1030      87E9
 1031 0114 CE5528DF 		.ascii	"\316U(\337\214\241\211\015\277\346BhA\231-\017\260T"
 1031      8CA1890D 
 1031      BFE64268 
 1031      41992D0F 
 1031      B054
 1032 0126 BB16     		.ascii	"\273\026"
 1033              		.section	.text.SubWord,"ax",%progbits
 1034              		.align	1
 1035              		.syntax unified
 1036              		.thumb
 1037              		.thumb_func
 1038              		.fpu softvfp
 1040              	SubWord:
 1041              	.LFB10:
 301:katrng.c      **** 
 302:katrng.c      **** static const uint32_t Rcon[] = {
 303:katrng.c      **** 	0x01000000, 0x02000000, 0x04000000, 0x08000000, 0x10000000, 0x20000000,
 304:katrng.c      **** 	0x40000000, 0x80000000, 0x1B000000, 0x36000000
 305:katrng.c      **** };
 306:katrng.c      **** 
 307:katrng.c      **** /* see inner.h */
 308:katrng.c      **** static const unsigned char S[] = {
 309:katrng.c      **** 	0x63, 0x7C, 0x77, 0x7B, 0xF2, 0x6B, 0x6F, 0xC5, 0x30, 0x01, 0x67, 0x2B,
 310:katrng.c      **** 	0xFE, 0xD7, 0xAB, 0x76, 0xCA, 0x82, 0xC9, 0x7D, 0xFA, 0x59, 0x47, 0xF0,
 311:katrng.c      **** 	0xAD, 0xD4, 0xA2, 0xAF, 0x9C, 0xA4, 0x72, 0xC0, 0xB7, 0xFD, 0x93, 0x26,
 312:katrng.c      **** 	0x36, 0x3F, 0xF7, 0xCC, 0x34, 0xA5, 0xE5, 0xF1, 0x71, 0xD8, 0x31, 0x15,
 313:katrng.c      **** 	0x04, 0xC7, 0x23, 0xC3, 0x18, 0x96, 0x05, 0x9A, 0x07, 0x12, 0x80, 0xE2,
 314:katrng.c      **** 	0xEB, 0x27, 0xB2, 0x75, 0x09, 0x83, 0x2C, 0x1A, 0x1B, 0x6E, 0x5A, 0xA0,
 315:katrng.c      **** 	0x52, 0x3B, 0xD6, 0xB3, 0x29, 0xE3, 0x2F, 0x84, 0x53, 0xD1, 0x00, 0xED,
 316:katrng.c      **** 	0x20, 0xFC, 0xB1, 0x5B, 0x6A, 0xCB, 0xBE, 0x39, 0x4A, 0x4C, 0x58, 0xCF,
 317:katrng.c      **** 	0xD0, 0xEF, 0xAA, 0xFB, 0x43, 0x4D, 0x33, 0x85, 0x45, 0xF9, 0x02, 0x7F,
 318:katrng.c      **** 	0x50, 0x3C, 0x9F, 0xA8, 0x51, 0xA3, 0x40, 0x8F, 0x92, 0x9D, 0x38, 0xF5,
 319:katrng.c      **** 	0xBC, 0xB6, 0xDA, 0x21, 0x10, 0xFF, 0xF3, 0xD2, 0xCD, 0x0C, 0x13, 0xEC,
 320:katrng.c      **** 	0x5F, 0x97, 0x44, 0x17, 0xC4, 0xA7, 0x7E, 0x3D, 0x64, 0x5D, 0x19, 0x73,
 321:katrng.c      **** 	0x60, 0x81, 0x4F, 0xDC, 0x22, 0x2A, 0x90, 0x88, 0x46, 0xEE, 0xB8, 0x14,
 322:katrng.c      **** 	0xDE, 0x5E, 0x0B, 0xDB, 0xE0, 0x32, 0x3A, 0x0A, 0x49, 0x06, 0x24, 0x5C,
 323:katrng.c      **** 	0xC2, 0xD3, 0xAC, 0x62, 0x91, 0x95, 0xE4, 0x79, 0xE7, 0xC8, 0x37, 0x6D,
 324:katrng.c      **** 	0x8D, 0xD5, 0x4E, 0xA9, 0x6C, 0x56, 0xF4, 0xEA, 0x65, 0x7A, 0xAE, 0x08,
 325:katrng.c      **** 	0xBA, 0x78, 0x25, 0x2E, 0x1C, 0xA6, 0xB4, 0xC6, 0xE8, 0xDD, 0x74, 0x1F,
 326:katrng.c      **** 	0x4B, 0xBD, 0x8B, 0x8A, 0x70, 0x3E, 0xB5, 0x66, 0x48, 0x03, 0xF6, 0x0E,
 327:katrng.c      **** 	0x61, 0x35, 0x57, 0xB9, 0x86, 0xC1, 0x1D, 0x9E, 0xE1, 0xF8, 0x98, 0x11,
 328:katrng.c      **** 	0x69, 0xD9, 0x8E, 0x94, 0x9B, 0x1E, 0x87, 0xE9, 0xCE, 0x55, 0x28, 0xDF,
 329:katrng.c      **** 	0x8C, 0xA1, 0x89, 0x0D, 0xBF, 0xE6, 0x42, 0x68, 0x41, 0x99, 0x2D, 0x0F,
 330:katrng.c      **** 	0xB0, 0x54, 0xBB, 0x16
 331:katrng.c      **** };
 332:katrng.c      **** 
 333:katrng.c      **** static uint32_t
 334:katrng.c      **** SubWord(uint32_t x)
 335:katrng.c      **** {
 1042              		.loc 1 335 1
 1043              		.cfi_startproc
 1044              		@ args = 0, pretend = 0, frame = 8
 1045              		@ frame_needed = 1, uses_anonymous_args = 0
 1046              		@ link register save eliminated.
 1047 0000 80B4     		push	{r7}
 1048              	.LCFI37:
 1049              		.cfi_def_cfa_offset 4
 1050              		.cfi_offset 7, -4
 1051 0002 83B0     		sub	sp, sp, #12
 1052              	.LCFI38:
 1053              		.cfi_def_cfa_offset 16
 1054 0004 00AF     		add	r7, sp, #0
 1055              	.LCFI39:
 1056              		.cfi_def_cfa_register 7
 1057 0006 7860     		str	r0, [r7, #4]
 336:katrng.c      **** 	return ((uint32_t)S[x >> 24] << 24)
 1058              		.loc 1 336 24
 1059 0008 7B68     		ldr	r3, [r7, #4]
 1060 000a 1B0E     		lsrs	r3, r3, #24
 1061              		.loc 1 336 21
 1062 000c 0D4A     		ldr	r2, .L53
 1063 000e D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 1064              		.loc 1 336 31
 1065 0010 1A06     		lsls	r2, r3, #24
 337:katrng.c      **** 		| ((uint32_t)S[(x >> 16) & 0xFF] << 16)
 1066              		.loc 1 337 21
 1067 0012 7B68     		ldr	r3, [r7, #4]
 1068 0014 1B0C     		lsrs	r3, r3, #16
 1069              		.loc 1 337 28
 1070 0016 DBB2     		uxtb	r3, r3
 1071              		.loc 1 337 17
 1072 0018 0A49     		ldr	r1, .L53
 1073 001a CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 1074              		.loc 1 337 36
 1075 001c 1B04     		lsls	r3, r3, #16
 1076              		.loc 1 337 3
 1077 001e 1A43     		orrs	r2, r2, r3
 338:katrng.c      **** 		| ((uint32_t)S[(x >> 8) & 0xFF] << 8)
 1078              		.loc 1 338 21
 1079 0020 7B68     		ldr	r3, [r7, #4]
 1080 0022 1B0A     		lsrs	r3, r3, #8
 1081              		.loc 1 338 27
 1082 0024 DBB2     		uxtb	r3, r3
 1083              		.loc 1 338 17
 1084 0026 0749     		ldr	r1, .L53
 1085 0028 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 1086              		.loc 1 338 35
 1087 002a 1B02     		lsls	r3, r3, #8
 1088              		.loc 1 338 3
 1089 002c 1343     		orrs	r3, r3, r2
 339:katrng.c      **** 		| (uint32_t)S[x & 0xFF];
 1090              		.loc 1 339 19
 1091 002e 7A68     		ldr	r2, [r7, #4]
 1092 0030 D2B2     		uxtb	r2, r2
 1093              		.loc 1 339 16
 1094 0032 0449     		ldr	r1, .L53
 1095 0034 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 1096              		.loc 1 339 3
 1097 0036 1343     		orrs	r3, r3, r2
 340:katrng.c      **** }
 1098              		.loc 1 340 1
 1099 0038 1846     		mov	r0, r3
 1100 003a 0C37     		adds	r7, r7, #12
 1101              	.LCFI40:
 1102              		.cfi_def_cfa_offset 4
 1103 003c BD46     		mov	sp, r7
 1104              	.LCFI41:
 1105              		.cfi_def_cfa_register 13
 1106              		@ sp needed
 1107 003e 80BC     		pop	{r7}
 1108              	.LCFI42:
 1109              		.cfi_restore 7
 1110              		.cfi_def_cfa_offset 0
 1111 0040 7047     		bx	lr
 1112              	.L54:
 1113 0042 00BF     		.align	2
 1114              	.L53:
 1115 0044 28000000 		.word	S
 1116              		.cfi_endproc
 1117              	.LFE10:
 1119              		.section	.text.aes256_keysched,"ax",%progbits
 1120              		.align	1
 1121              		.syntax unified
 1122              		.thumb
 1123              		.thumb_func
 1124              		.fpu softvfp
 1126              	aes256_keysched:
 1127              	.LFB11:
 341:katrng.c      **** 
 342:katrng.c      **** static void
 343:katrng.c      **** aes256_keysched(uint32_t *skey, const void *key)
 344:katrng.c      **** {
 1128              		.loc 1 344 1
 1129              		.cfi_startproc
 1130              		@ args = 0, pretend = 0, frame = 24
 1131              		@ frame_needed = 1, uses_anonymous_args = 0
 1132 0000 90B5     		push	{r4, r7, lr}
 1133              	.LCFI43:
 1134              		.cfi_def_cfa_offset 12
 1135              		.cfi_offset 4, -12
 1136              		.cfi_offset 7, -8
 1137              		.cfi_offset 14, -4
 1138 0002 87B0     		sub	sp, sp, #28
 1139              	.LCFI44:
 1140              		.cfi_def_cfa_offset 40
 1141 0004 00AF     		add	r7, sp, #0
 1142              	.LCFI45:
 1143              		.cfi_def_cfa_register 7
 1144 0006 7860     		str	r0, [r7, #4]
 1145 0008 3960     		str	r1, [r7]
 345:katrng.c      **** 	int i, j, k;
 346:katrng.c      **** 
 347:katrng.c      **** 	for (i = 0; i < 8; i ++) {
 1146              		.loc 1 347 9
 1147 000a 0023     		movs	r3, #0
 1148 000c 7B61     		str	r3, [r7, #20]
 1149              		.loc 1 347 2
 1150 000e 10E0     		b	.L56
 1151              	.L57:
 348:katrng.c      **** 		skey[i] = dec32be((const unsigned char *)key + (i << 2));
 1152              		.loc 1 348 53 discriminator 3
 1153 0010 7B69     		ldr	r3, [r7, #20]
 1154 0012 9B00     		lsls	r3, r3, #2
 1155 0014 1A46     		mov	r2, r3
 1156              		.loc 1 348 13 discriminator 3
 1157 0016 3B68     		ldr	r3, [r7]
 1158 0018 9918     		adds	r1, r3, r2
 1159              		.loc 1 348 7 discriminator 3
 1160 001a 7B69     		ldr	r3, [r7, #20]
 1161 001c 9B00     		lsls	r3, r3, #2
 1162 001e 7A68     		ldr	r2, [r7, #4]
 1163 0020 D418     		adds	r4, r2, r3
 1164              		.loc 1 348 13 discriminator 3
 1165 0022 0846     		mov	r0, r1
 1166 0024 FFF7FEFF 		bl	dec32be
 1167 0028 0346     		mov	r3, r0
 1168              		.loc 1 348 11 discriminator 3
 1169 002a 2360     		str	r3, [r4]
 347:katrng.c      **** 		skey[i] = dec32be((const unsigned char *)key + (i << 2));
 1170              		.loc 1 347 23 discriminator 3
 1171 002c 7B69     		ldr	r3, [r7, #20]
 1172 002e 0133     		adds	r3, r3, #1
 1173 0030 7B61     		str	r3, [r7, #20]
 1174              	.L56:
 347:katrng.c      **** 		skey[i] = dec32be((const unsigned char *)key + (i << 2));
 1175              		.loc 1 347 2 discriminator 1
 1176 0032 7B69     		ldr	r3, [r7, #20]
 1177 0034 072B     		cmp	r3, #7
 1178 0036 EBDD     		ble	.L57
 349:katrng.c      **** 	}
 350:katrng.c      **** 	for (i = 8, j = 0, k = 0; i < 60; i ++) {
 1179              		.loc 1 350 9
 1180 0038 0823     		movs	r3, #8
 1181 003a 7B61     		str	r3, [r7, #20]
 1182              		.loc 1 350 16
 1183 003c 0023     		movs	r3, #0
 1184 003e 3B61     		str	r3, [r7, #16]
 1185              		.loc 1 350 23
 1186 0040 0023     		movs	r3, #0
 1187 0042 FB60     		str	r3, [r7, #12]
 1188              		.loc 1 350 2
 1189 0044 3EE0     		b	.L58
 1190              	.L62:
 1191              	.LBB8:
 351:katrng.c      **** 		uint32_t tmp;
 352:katrng.c      **** 
 353:katrng.c      **** 		tmp = skey[i - 1];
 1192              		.loc 1 353 13
 1193 0046 7B69     		ldr	r3, [r7, #20]
 1194 0048 03F18043 		add	r3, r3, #1073741824
 1195 004c 013B     		subs	r3, r3, #1
 1196 004e 9B00     		lsls	r3, r3, #2
 1197 0050 7A68     		ldr	r2, [r7, #4]
 1198 0052 1344     		add	r3, r3, r2
 1199              		.loc 1 353 7
 1200 0054 1B68     		ldr	r3, [r3]
 1201 0056 BB60     		str	r3, [r7, #8]
 354:katrng.c      **** 		if (j == 0) {
 1202              		.loc 1 354 6
 1203 0058 3B69     		ldr	r3, [r7, #16]
 1204 005a 002B     		cmp	r3, #0
 1205 005c 0ED1     		bne	.L59
 355:katrng.c      **** 			tmp = (tmp << 8) | (tmp >> 24);
 1206              		.loc 1 355 8
 1207 005e BB68     		ldr	r3, [r7, #8]
 1208 0060 4FEA3363 		ror	r3, r3, #24
 1209 0064 BB60     		str	r3, [r7, #8]
 356:katrng.c      **** 			tmp = SubWord(tmp) ^ Rcon[k];
 1210              		.loc 1 356 10
 1211 0066 B868     		ldr	r0, [r7, #8]
 1212 0068 FFF7FEFF 		bl	SubWord
 1213 006c 0246     		mov	r2, r0
 1214              		.loc 1 356 29
 1215 006e 1949     		ldr	r1, .L63
 1216 0070 FB68     		ldr	r3, [r7, #12]
 1217 0072 51F82330 		ldr	r3, [r1, r3, lsl #2]
 1218              		.loc 1 356 8
 1219 0076 5340     		eors	r3, r3, r2
 1220 0078 BB60     		str	r3, [r7, #8]
 1221 007a 06E0     		b	.L60
 1222              	.L59:
 357:katrng.c      **** 		} else if (j == 4) {
 1223              		.loc 1 357 13
 1224 007c 3B69     		ldr	r3, [r7, #16]
 1225 007e 042B     		cmp	r3, #4
 1226 0080 03D1     		bne	.L60
 358:katrng.c      **** 			tmp = SubWord(tmp);
 1227              		.loc 1 358 10
 1228 0082 B868     		ldr	r0, [r7, #8]
 1229 0084 FFF7FEFF 		bl	SubWord
 1230 0088 B860     		str	r0, [r7, #8]
 1231              	.L60:
 359:katrng.c      **** 		}
 360:katrng.c      **** 		skey[i] = skey[i - 8] ^ tmp;
 1232              		.loc 1 360 17
 1233 008a 7B69     		ldr	r3, [r7, #20]
 1234 008c 03F18043 		add	r3, r3, #1073741824
 1235 0090 083B     		subs	r3, r3, #8
 1236 0092 9B00     		lsls	r3, r3, #2
 1237 0094 7A68     		ldr	r2, [r7, #4]
 1238 0096 1344     		add	r3, r3, r2
 1239 0098 1968     		ldr	r1, [r3]
 1240              		.loc 1 360 7
 1241 009a 7B69     		ldr	r3, [r7, #20]
 1242 009c 9B00     		lsls	r3, r3, #2
 1243 009e 7A68     		ldr	r2, [r7, #4]
 1244 00a0 1344     		add	r3, r3, r2
 1245              		.loc 1 360 25
 1246 00a2 BA68     		ldr	r2, [r7, #8]
 1247 00a4 4A40     		eors	r2, r2, r1
 1248              		.loc 1 360 11
 1249 00a6 1A60     		str	r2, [r3]
 361:katrng.c      **** 		if (++ j == 8) {
 1250              		.loc 1 361 6
 1251 00a8 3B69     		ldr	r3, [r7, #16]
 1252 00aa 0133     		adds	r3, r3, #1
 1253 00ac 3B61     		str	r3, [r7, #16]
 1254 00ae 3B69     		ldr	r3, [r7, #16]
 1255 00b0 082B     		cmp	r3, #8
 1256 00b2 04D1     		bne	.L61
 362:katrng.c      **** 			j = 0;
 1257              		.loc 1 362 6
 1258 00b4 0023     		movs	r3, #0
 1259 00b6 3B61     		str	r3, [r7, #16]
 363:katrng.c      **** 			k ++;
 1260              		.loc 1 363 6
 1261 00b8 FB68     		ldr	r3, [r7, #12]
 1262 00ba 0133     		adds	r3, r3, #1
 1263 00bc FB60     		str	r3, [r7, #12]
 1264              	.L61:
 1265              	.LBE8:
 350:katrng.c      **** 		uint32_t tmp;
 1266              		.loc 1 350 38 discriminator 2
 1267 00be 7B69     		ldr	r3, [r7, #20]
 1268 00c0 0133     		adds	r3, r3, #1
 1269 00c2 7B61     		str	r3, [r7, #20]
 1270              	.L58:
 350:katrng.c      **** 		uint32_t tmp;
 1271              		.loc 1 350 2 discriminator 1
 1272 00c4 7B69     		ldr	r3, [r7, #20]
 1273 00c6 3B2B     		cmp	r3, #59
 1274 00c8 BDDD     		ble	.L62
 364:katrng.c      **** 		}
 365:katrng.c      **** 	}
 366:katrng.c      **** }
 1275              		.loc 1 366 1
 1276 00ca 00BF     		nop
 1277 00cc 00BF     		nop
 1278 00ce 1C37     		adds	r7, r7, #28
 1279              	.LCFI46:
 1280              		.cfi_def_cfa_offset 12
 1281 00d0 BD46     		mov	sp, r7
 1282              	.LCFI47:
 1283              		.cfi_def_cfa_register 13
 1284              		@ sp needed
 1285 00d2 90BD     		pop	{r4, r7, pc}
 1286              	.L64:
 1287              		.align	2
 1288              	.L63:
 1289 00d4 00000000 		.word	Rcon
 1290              		.cfi_endproc
 1291              	.LFE11:
 1293              		.section	.rodata
 1294              		.align	2
 1297              	Ssm0:
 1298 0128 A56363C6 		.word	-966564955
 1299 012c 847C7CF8 		.word	-126059388
 1300 0130 997777EE 		.word	-294160487
 1301 0134 8D7B7BF6 		.word	-159679603
 1302 0138 0DF2F2FF 		.word	-855539
 1303 013c BD6B6BD6 		.word	-697603139
 1304 0140 B16F6FDE 		.word	-563122255
 1305 0144 54C5C591 		.word	-1849309868
 1306 0148 50303060 		.word	1613770832
 1307 014c 03010102 		.word	33620227
 1308 0150 A96767CE 		.word	-832084055
 1309 0154 7D2B2B56 		.word	1445669757
 1310 0158 19FEFEE7 		.word	-402719207
 1311 015c 62D7D7B5 		.word	-1244145822
 1312 0160 E6ABAB4D 		.word	1303096294
 1313 0164 9A7676EC 		.word	-327780710
 1314 0168 45CACA8F 		.word	-1882535355
 1315 016c 9D82821F 		.word	528646813
 1316 0170 40C9C989 		.word	-1983264448
 1317 0174 877D7DFA 		.word	-92439161
 1318 0178 15FAFAEF 		.word	-268764651
 1319 017c EB5959B2 		.word	-1302767125
 1320 0180 C947478E 		.word	-1907931191
 1321 0184 0BF0F0FB 		.word	-68095989
 1322 0188 ECADAD41 		.word	1101901292
 1323 018c 67D4D4B3 		.word	-1277897625
 1324 0190 FDA2A25F 		.word	1604494077
 1325 0194 EAAFAF45 		.word	1169141738
 1326 0198 BF9C9C23 		.word	597466303
 1327 019c F7A4A453 		.word	1403299063
 1328 01a0 967272E4 		.word	-462261610
 1329 01a4 5BC0C09B 		.word	-1681866661
 1330 01a8 C2B7B775 		.word	1974974402
 1331 01ac 1CFDFDE1 		.word	-503448292
 1332 01b0 AE93933D 		.word	1033081774
 1333 01b4 6A26264C 		.word	1277568618
 1334 01b8 5A36366C 		.word	1815492186
 1335 01bc 413F3F7E 		.word	2118074177
 1336 01c0 02F7F7F5 		.word	-168298750
 1337 01c4 4FCCCC83 		.word	-2083730353
 1338 01c8 5C343468 		.word	1748251740
 1339 01cc F4A5A551 		.word	1369810420
 1340 01d0 34E5E5D1 		.word	-773462732
 1341 01d4 08F1F1F9 		.word	-101584632
 1342 01d8 937171E2 		.word	-495881837
 1343 01dc 73D8D8AB 		.word	-1411852173
 1344 01e0 53313162 		.word	1647391059
 1345 01e4 3F15152A 		.word	706024767
 1346 01e8 0C040408 		.word	134480908
 1347 01ec 52C7C795 		.word	-1782069422
 1348 01f0 65232346 		.word	1176707941
 1349 01f4 5EC3C39D 		.word	-1648114850
 1350 01f8 28181830 		.word	806885416
 1351 01fc A1969637 		.word	932615841
 1352 0200 0F05050A 		.word	168101135
 1353 0204 B59A9A2F 		.word	798661301
 1354 0208 0907070E 		.word	235341577
 1355 020c 36121224 		.word	605164086
 1356 0210 9B80801B 		.word	461406363
 1357 0214 3DE2E2DF 		.word	-538779075
 1358 0218 26EBEBCD 		.word	-840176858
 1359 021c 6927274E 		.word	1311188841
 1360 0220 CDB2B27F 		.word	2142417613
 1361 0224 9F7575EA 		.word	-361400929
 1362 0228 1B090912 		.word	302582043
 1363 022c 9E83831D 		.word	495158174
 1364 0230 742C2C58 		.word	1479289972
 1365 0234 2E1A1A34 		.word	874125870
 1366 0238 2D1B1B36 		.word	907746093
 1367 023c B26E6EDC 		.word	-596742478
 1368 0240 EE5A5AB4 		.word	-1269146898
 1369 0244 FBA0A05B 		.word	1537253627
 1370 0248 F65252A4 		.word	-1538108682
 1371 024c 4D3B3B76 		.word	1983593293
 1372 0250 61D6D6B7 		.word	-1210657183
 1373 0254 CEB3B37D 		.word	2108928974
 1374 0258 7B292952 		.word	1378429307
 1375 025c 3EE3E3DD 		.word	-572267714
 1376 0260 712F2F5E 		.word	1580150641
 1377 0264 97848413 		.word	327451799
 1378 0268 F55353A6 		.word	-1504488459
 1379 026c 68D1D1B9 		.word	-1177431704
 1380 0270 00000000 		.word	0
 1381 0274 2CEDEDC1 		.word	-1041371860
 1382 0278 60202040 		.word	1075847264
 1383 027c 1FFCFCE3 		.word	-469959649
 1384 0280 C8B1B179 		.word	2041688520
 1385 0284 ED5B5BB6 		.word	-1235526675
 1386 0288 BE6A6AD4 		.word	-731223362
 1387 028c 46CBCB8D 		.word	-1916023994
 1388 0290 D9BEBE67 		.word	1740553945
 1389 0294 4B393972 		.word	1916352843
 1390 0298 DE4A4A94 		.word	-1807070498
 1391 029c D44C4C98 		.word	-1739830060
 1392 02a0 E85858B0 		.word	-1336387352
 1393 02a4 4ACFCF85 		.word	-2049978550
 1394 02a8 6BD0D0BB 		.word	-1143943061
 1395 02ac 2AEFEFC5 		.word	-974131414
 1396 02b0 E5AAAA4F 		.word	1336584933
 1397 02b4 16FBFBED 		.word	-302253290
 1398 02b8 C5434386 		.word	-2042412091
 1399 02bc D74D4D9A 		.word	-1706209833
 1400 02c0 55333366 		.word	1714631509
 1401 02c4 94858511 		.word	293963156
 1402 02c8 CF45458A 		.word	-1975171633
 1403 02cc 10F9F9E9 		.word	-369493744
 1404 02d0 06020204 		.word	67240454
 1405 02d4 817F7FFE 		.word	-25198719
 1406 02d8 F05050A0 		.word	-1605349136
 1407 02dc 443C3C78 		.word	2017213508
 1408 02e0 BA9F9F25 		.word	631218106
 1409 02e4 E3A8A84B 		.word	1269344483
 1410 02e8 F35151A2 		.word	-1571728909
 1411 02ec FEA3A35D 		.word	1571005438
 1412 02f0 C0404080 		.word	-2143272768
 1413 02f4 8A8F8F05 		.word	93294474
 1414 02f8 AD92923F 		.word	1066570413
 1415 02fc BC9D9D21 		.word	563977660
 1416 0300 48383870 		.word	1882732616
 1417 0304 04F5F5F1 		.word	-235539196
 1418 0308 DFBCBC63 		.word	1673313503
 1419 030c C1B6B677 		.word	2008463041
 1420 0310 75DADAAF 		.word	-1344611723
 1421 0314 63212142 		.word	1109467491
 1422 0318 30101020 		.word	537923632
 1423 031c 1AFFFFE5 		.word	-436207846
 1424 0320 0EF3F3FD 		.word	-34344178
 1425 0324 6DD2D2BF 		.word	-1076702611
 1426 0328 4CCDCD81 		.word	-2117218996
 1427 032c 140C0C18 		.word	403442708
 1428 0330 35131326 		.word	638784309
 1429 0334 2FECECC3 		.word	-1007883217
 1430 0338 E15F5FBE 		.word	-1101045791
 1431 033c A2979735 		.word	899127202
 1432 0340 CC444488 		.word	-2008791860
 1433 0344 3917172E 		.word	773265209
 1434 0348 57C4C493 		.word	-1815821225
 1435 034c F2A7A755 		.word	1437050866
 1436 0350 827E7EFC 		.word	-58818942
 1437 0354 473D3D7A 		.word	2050833735
 1438 0358 AC6464C8 		.word	-932944724
 1439 035c E75D5DBA 		.word	-1168286233
 1440 0360 2B191932 		.word	840505643
 1441 0364 957373E6 		.word	-428641387
 1442 0368 A06060C0 		.word	-1067425632
 1443 036c 98818119 		.word	427917720
 1444 0370 D14F4F9E 		.word	-1638969391
 1445 0374 7FDCDCA3 		.word	-1545806721
 1446 0378 66222244 		.word	1143087718
 1447 037c 7E2A2A54 		.word	1412049534
 1448 0380 AB90903B 		.word	999329963
 1449 0384 8388880B 		.word	193497219
 1450 0388 CA46468C 		.word	-1941551414
 1451 038c 29EEEEC7 		.word	-940642775
 1452 0390 D3B8B86B 		.word	1807268051
 1453 0394 3C141428 		.word	672404540
 1454 0398 79DEDEA7 		.word	-1478566279
 1455 039c E25E5EBC 		.word	-1134666014
 1456 03a0 1D0B0B16 		.word	369822493
 1457 03a4 76DBDBAD 		.word	-1378100362
 1458 03a8 3BE0E0DB 		.word	-606019525
 1459 03ac 56323264 		.word	1681011286
 1460 03b0 4E3A3A74 		.word	1949973070
 1461 03b4 1E0A0A14 		.word	336202270
 1462 03b8 DB494992 		.word	-1840690725
 1463 03bc 0A06060C 		.word	201721354
 1464 03c0 6C242448 		.word	1210328172
 1465 03c4 E45C5CB8 		.word	-1201906460
 1466 03c8 5DC2C29F 		.word	-1614626211
 1467 03cc 6ED3D3BD 		.word	-1110191250
 1468 03d0 EFACAC43 		.word	1135389935
 1469 03d4 A66262C4 		.word	-1000185178
 1470 03d8 A8919139 		.word	965841320
 1471 03dc A4959531 		.word	831886756
 1472 03e0 37E4E4D3 		.word	-739974089
 1473 03e4 8B7979F2 		.word	-226920053
 1474 03e8 32E7E7D5 		.word	-706222286
 1475 03ec 43C8C88B 		.word	-1949775805
 1476 03f0 5937376E 		.word	1849112409
 1477 03f4 B76D6DDA 		.word	-630362697
 1478 03f8 8C8D8D01 		.word	26054028
 1479 03fc 64D5D5B1 		.word	-1311386268
 1480 0400 D24E4E9C 		.word	-1672589614
 1481 0404 E0A9A949 		.word	1235855840
 1482 0408 B46C6CD8 		.word	-663982924
 1483 040c FA5656AC 		.word	-1403627782
 1484 0410 07F4F4F3 		.word	-202050553
 1485 0414 25EAEACF 		.word	-806688219
 1486 0418 AF6565CA 		.word	-899324497
 1487 041c 8E7A7AF4 		.word	-193299826
 1488 0420 E9AEAE47 		.word	1202630377
 1489 0424 18080810 		.word	268961816
 1490 0428 D5BABA6F 		.word	1874508501
 1491 042c 887878F0 		.word	-260540280
 1492 0430 6F25254A 		.word	1243948399
 1493 0434 722E2E5C 		.word	1546530418
 1494 0438 241C1C38 		.word	941366308
 1495 043c F1A6A657 		.word	1470539505
 1496 0440 C7B4B473 		.word	1941222599
 1497 0444 51C6C697 		.word	-1748580783
 1498 0448 23E8E8CB 		.word	-873928669
 1499 044c 7CDDDDA1 		.word	-1579295364
 1500 0450 9C7474E8 		.word	-395021156
 1501 0454 211F1F3E 		.word	1042226977
 1502 0458 DD4B4B96 		.word	-1773450275
 1503 045c DCBDBD61 		.word	1639824860
 1504 0460 868B8B0D 		.word	227249030
 1505 0464 858A8A0F 		.word	260737669
 1506 0468 907070E0 		.word	-529502064
 1507 046c 423E3E7C 		.word	2084453954
 1508 0470 C4B5B571 		.word	1907733956
 1509 0474 AA6666CC 		.word	-865704278
 1510 0478 D8484890 		.word	-1874310952
 1511 047c 05030306 		.word	100860677
 1512 0480 01F6F6F7 		.word	-134810111
 1513 0484 120E0E1C 		.word	470683154
 1514 0488 A36161C2 		.word	-1033805405
 1515 048c 5F35356A 		.word	1781871967
 1516 0490 F95757AE 		.word	-1370007559
 1517 0494 D0B9B969 		.word	1773779408
 1518 0498 91868617 		.word	394692241
 1519 049c 58C1C199 		.word	-1715355304
 1520 04a0 271D1D3A 		.word	974986535
 1521 04a4 B99E9E27 		.word	664706745
 1522 04a8 38E1E1D9 		.word	-639508168
 1523 04ac 13F8F8EB 		.word	-336005101
 1524 04b0 B398982B 		.word	731420851
 1525 04b4 33111122 		.word	571543859
 1526 04b8 BB6969D2 		.word	-764843589
 1527 04bc 70D9D9A9 		.word	-1445340816
 1528 04c0 898E8E07 		.word	126783113
 1529 04c4 A7949433 		.word	865375399
 1530 04c8 B69B9B2D 		.word	765172662
 1531 04cc 221E1E3C 		.word	1008606754
 1532 04d0 92878715 		.word	361203602
 1533 04d4 20E9E9C9 		.word	-907417312
 1534 04d8 49CECE87 		.word	-2016489911
 1535 04dc FF5555AA 		.word	-1437248001
 1536 04e0 78282850 		.word	1344809080
 1537 04e4 7ADFDFA5 		.word	-1512054918
 1538 04e8 8F8C8C03 		.word	59542671
 1539 04ec F8A1A159 		.word	1503764984
 1540 04f0 80898909 		.word	160008576
 1541 04f4 170D0D1A 		.word	437062935
 1542 04f8 DABFBF65 		.word	1707065306
 1543 04fc 31E6E6D7 		.word	-672733647
 1544 0500 C6424284 		.word	-2076032314
 1545 0504 B86868D0 		.word	-798463816
 1546 0508 C3414182 		.word	-2109652541
 1547 050c B0999929 		.word	697932208
 1548 0510 772D2D5A 		.word	1512910199
 1549 0514 110F0F1E 		.word	504303377
 1550 0518 CBB0B07B 		.word	2075177163
 1551 051c FC5454A8 		.word	-1470868228
 1552 0520 D6BBBB6D 		.word	1841019862
 1553 0524 3A16162C 		.word	739644986
 1554              		.section	.text.rotr,"ax",%progbits
 1555              		.align	1
 1556              		.syntax unified
 1557              		.thumb
 1558              		.thumb_func
 1559              		.fpu softvfp
 1561              	rotr:
 1562              	.LFB12:
 367:katrng.c      **** 
 368:katrng.c      **** static const uint32_t Ssm0[] = {
 369:katrng.c      **** 	0xC66363A5, 0xF87C7C84, 0xEE777799, 0xF67B7B8D, 0xFFF2F20D, 0xD66B6BBD,
 370:katrng.c      **** 	0xDE6F6FB1, 0x91C5C554, 0x60303050, 0x02010103, 0xCE6767A9, 0x562B2B7D,
 371:katrng.c      **** 	0xE7FEFE19, 0xB5D7D762, 0x4DABABE6, 0xEC76769A, 0x8FCACA45, 0x1F82829D,
 372:katrng.c      **** 	0x89C9C940, 0xFA7D7D87, 0xEFFAFA15, 0xB25959EB, 0x8E4747C9, 0xFBF0F00B,
 373:katrng.c      **** 	0x41ADADEC, 0xB3D4D467, 0x5FA2A2FD, 0x45AFAFEA, 0x239C9CBF, 0x53A4A4F7,
 374:katrng.c      **** 	0xE4727296, 0x9BC0C05B, 0x75B7B7C2, 0xE1FDFD1C, 0x3D9393AE, 0x4C26266A,
 375:katrng.c      **** 	0x6C36365A, 0x7E3F3F41, 0xF5F7F702, 0x83CCCC4F, 0x6834345C, 0x51A5A5F4,
 376:katrng.c      **** 	0xD1E5E534, 0xF9F1F108, 0xE2717193, 0xABD8D873, 0x62313153, 0x2A15153F,
 377:katrng.c      **** 	0x0804040C, 0x95C7C752, 0x46232365, 0x9DC3C35E, 0x30181828, 0x379696A1,
 378:katrng.c      **** 	0x0A05050F, 0x2F9A9AB5, 0x0E070709, 0x24121236, 0x1B80809B, 0xDFE2E23D,
 379:katrng.c      **** 	0xCDEBEB26, 0x4E272769, 0x7FB2B2CD, 0xEA75759F, 0x1209091B, 0x1D83839E,
 380:katrng.c      **** 	0x582C2C74, 0x341A1A2E, 0x361B1B2D, 0xDC6E6EB2, 0xB45A5AEE, 0x5BA0A0FB,
 381:katrng.c      **** 	0xA45252F6, 0x763B3B4D, 0xB7D6D661, 0x7DB3B3CE, 0x5229297B, 0xDDE3E33E,
 382:katrng.c      **** 	0x5E2F2F71, 0x13848497, 0xA65353F5, 0xB9D1D168, 0x00000000, 0xC1EDED2C,
 383:katrng.c      **** 	0x40202060, 0xE3FCFC1F, 0x79B1B1C8, 0xB65B5BED, 0xD46A6ABE, 0x8DCBCB46,
 384:katrng.c      **** 	0x67BEBED9, 0x7239394B, 0x944A4ADE, 0x984C4CD4, 0xB05858E8, 0x85CFCF4A,
 385:katrng.c      **** 	0xBBD0D06B, 0xC5EFEF2A, 0x4FAAAAE5, 0xEDFBFB16, 0x864343C5, 0x9A4D4DD7,
 386:katrng.c      **** 	0x66333355, 0x11858594, 0x8A4545CF, 0xE9F9F910, 0x04020206, 0xFE7F7F81,
 387:katrng.c      **** 	0xA05050F0, 0x783C3C44, 0x259F9FBA, 0x4BA8A8E3, 0xA25151F3, 0x5DA3A3FE,
 388:katrng.c      **** 	0x804040C0, 0x058F8F8A, 0x3F9292AD, 0x219D9DBC, 0x70383848, 0xF1F5F504,
 389:katrng.c      **** 	0x63BCBCDF, 0x77B6B6C1, 0xAFDADA75, 0x42212163, 0x20101030, 0xE5FFFF1A,
 390:katrng.c      **** 	0xFDF3F30E, 0xBFD2D26D, 0x81CDCD4C, 0x180C0C14, 0x26131335, 0xC3ECEC2F,
 391:katrng.c      **** 	0xBE5F5FE1, 0x359797A2, 0x884444CC, 0x2E171739, 0x93C4C457, 0x55A7A7F2,
 392:katrng.c      **** 	0xFC7E7E82, 0x7A3D3D47, 0xC86464AC, 0xBA5D5DE7, 0x3219192B, 0xE6737395,
 393:katrng.c      **** 	0xC06060A0, 0x19818198, 0x9E4F4FD1, 0xA3DCDC7F, 0x44222266, 0x542A2A7E,
 394:katrng.c      **** 	0x3B9090AB, 0x0B888883, 0x8C4646CA, 0xC7EEEE29, 0x6BB8B8D3, 0x2814143C,
 395:katrng.c      **** 	0xA7DEDE79, 0xBC5E5EE2, 0x160B0B1D, 0xADDBDB76, 0xDBE0E03B, 0x64323256,
 396:katrng.c      **** 	0x743A3A4E, 0x140A0A1E, 0x924949DB, 0x0C06060A, 0x4824246C, 0xB85C5CE4,
 397:katrng.c      **** 	0x9FC2C25D, 0xBDD3D36E, 0x43ACACEF, 0xC46262A6, 0x399191A8, 0x319595A4,
 398:katrng.c      **** 	0xD3E4E437, 0xF279798B, 0xD5E7E732, 0x8BC8C843, 0x6E373759, 0xDA6D6DB7,
 399:katrng.c      **** 	0x018D8D8C, 0xB1D5D564, 0x9C4E4ED2, 0x49A9A9E0, 0xD86C6CB4, 0xAC5656FA,
 400:katrng.c      **** 	0xF3F4F407, 0xCFEAEA25, 0xCA6565AF, 0xF47A7A8E, 0x47AEAEE9, 0x10080818,
 401:katrng.c      **** 	0x6FBABAD5, 0xF0787888, 0x4A25256F, 0x5C2E2E72, 0x381C1C24, 0x57A6A6F1,
 402:katrng.c      **** 	0x73B4B4C7, 0x97C6C651, 0xCBE8E823, 0xA1DDDD7C, 0xE874749C, 0x3E1F1F21,
 403:katrng.c      **** 	0x964B4BDD, 0x61BDBDDC, 0x0D8B8B86, 0x0F8A8A85, 0xE0707090, 0x7C3E3E42,
 404:katrng.c      **** 	0x71B5B5C4, 0xCC6666AA, 0x904848D8, 0x06030305, 0xF7F6F601, 0x1C0E0E12,
 405:katrng.c      **** 	0xC26161A3, 0x6A35355F, 0xAE5757F9, 0x69B9B9D0, 0x17868691, 0x99C1C158,
 406:katrng.c      **** 	0x3A1D1D27, 0x279E9EB9, 0xD9E1E138, 0xEBF8F813, 0x2B9898B3, 0x22111133,
 407:katrng.c      **** 	0xD26969BB, 0xA9D9D970, 0x078E8E89, 0x339494A7, 0x2D9B9BB6, 0x3C1E1E22,
 408:katrng.c      **** 	0x15878792, 0xC9E9E920, 0x87CECE49, 0xAA5555FF, 0x50282878, 0xA5DFDF7A,
 409:katrng.c      **** 	0x038C8C8F, 0x59A1A1F8, 0x09898980, 0x1A0D0D17, 0x65BFBFDA, 0xD7E6E631,
 410:katrng.c      **** 	0x844242C6, 0xD06868B8, 0x824141C3, 0x299999B0, 0x5A2D2D77, 0x1E0F0F11,
 411:katrng.c      **** 	0x7BB0B0CB, 0xA85454FC, 0x6DBBBBD6, 0x2C16163A
 412:katrng.c      **** };
 413:katrng.c      **** 
 414:katrng.c      **** static inline uint32_t
 415:katrng.c      **** rotr(uint32_t x, int n)
 416:katrng.c      **** {
 1563              		.loc 1 416 1
 1564              		.cfi_startproc
 1565              		@ args = 0, pretend = 0, frame = 8
 1566              		@ frame_needed = 1, uses_anonymous_args = 0
 1567              		@ link register save eliminated.
 1568 0000 80B4     		push	{r7}
 1569              	.LCFI48:
 1570              		.cfi_def_cfa_offset 4
 1571              		.cfi_offset 7, -4
 1572 0002 83B0     		sub	sp, sp, #12
 1573              	.LCFI49:
 1574              		.cfi_def_cfa_offset 16
 1575 0004 00AF     		add	r7, sp, #0
 1576              	.LCFI50:
 1577              		.cfi_def_cfa_register 7
 1578 0006 7860     		str	r0, [r7, #4]
 1579 0008 3960     		str	r1, [r7]
 417:katrng.c      **** 	return (x << (32 - n)) | (x >> n);
 1580              		.loc 1 417 25
 1581 000a 7A68     		ldr	r2, [r7, #4]
 1582 000c 3B68     		ldr	r3, [r7]
 1583 000e 62FA03F3 		ror	r3, r2, r3
 418:katrng.c      **** }
 1584              		.loc 1 418 1
 1585 0012 1846     		mov	r0, r3
 1586 0014 0C37     		adds	r7, r7, #12
 1587              	.LCFI51:
 1588              		.cfi_def_cfa_offset 4
 1589 0016 BD46     		mov	sp, r7
 1590              	.LCFI52:
 1591              		.cfi_def_cfa_register 13
 1592              		@ sp needed
 1593 0018 80BC     		pop	{r7}
 1594              	.LCFI53:
 1595              		.cfi_restore 7
 1596              		.cfi_def_cfa_offset 0
 1597 001a 7047     		bx	lr
 1598              		.cfi_endproc
 1599              	.LFE12:
 1601              		.section	.text.aes256_encrypt,"ax",%progbits
 1602              		.align	1
 1603              		.syntax unified
 1604              		.thumb
 1605              		.thumb_func
 1606              		.fpu softvfp
 1608              	aes256_encrypt:
 1609              	.LFB13:
 419:katrng.c      **** 
 420:katrng.c      **** #define SboxExt0(x)   (Ssm0[x])
 421:katrng.c      **** #define SboxExt1(x)   (rotr(Ssm0[x], 8))
 422:katrng.c      **** #define SboxExt2(x)   (rotr(Ssm0[x], 16))
 423:katrng.c      **** #define SboxExt3(x)   (rotr(Ssm0[x], 24))
 424:katrng.c      **** 
 425:katrng.c      **** static void
 426:katrng.c      **** aes256_encrypt(const uint32_t *skey, void *data)
 427:katrng.c      **** {
 1610              		.loc 1 427 1
 1611              		.cfi_startproc
 1612              		@ args = 0, pretend = 0, frame = 64
 1613              		@ frame_needed = 1, uses_anonymous_args = 0
 1614 0000 90B5     		push	{r4, r7, lr}
 1615              	.LCFI54:
 1616              		.cfi_def_cfa_offset 12
 1617              		.cfi_offset 4, -12
 1618              		.cfi_offset 7, -8
 1619              		.cfi_offset 14, -4
 1620 0002 91B0     		sub	sp, sp, #68
 1621              	.LCFI55:
 1622              		.cfi_def_cfa_offset 80
 1623 0004 00AF     		add	r7, sp, #0
 1624              	.LCFI56:
 1625              		.cfi_def_cfa_register 7
 1626 0006 7860     		str	r0, [r7, #4]
 1627 0008 3960     		str	r1, [r7]
 428:katrng.c      **** 	unsigned char *buf;
 429:katrng.c      **** 	uint32_t s0, s1, s2, s3;
 430:katrng.c      **** 	uint32_t t0, t1, t2, t3;
 431:katrng.c      **** 	unsigned u;
 432:katrng.c      **** 
 433:katrng.c      **** 	buf = data;
 1628              		.loc 1 433 6
 1629 000a 3B68     		ldr	r3, [r7]
 1630 000c BB62     		str	r3, [r7, #40]
 434:katrng.c      **** 	s0 = dec32be(buf);
 1631              		.loc 1 434 7
 1632 000e B86A     		ldr	r0, [r7, #40]
 1633 0010 FFF7FEFF 		bl	dec32be
 1634 0014 F863     		str	r0, [r7, #60]
 435:katrng.c      **** 	s1 = dec32be(buf + 4);
 1635              		.loc 1 435 19
 1636 0016 BB6A     		ldr	r3, [r7, #40]
 1637 0018 0433     		adds	r3, r3, #4
 1638              		.loc 1 435 7
 1639 001a 1846     		mov	r0, r3
 1640 001c FFF7FEFF 		bl	dec32be
 1641 0020 B863     		str	r0, [r7, #56]
 436:katrng.c      **** 	s2 = dec32be(buf + 8);
 1642              		.loc 1 436 19
 1643 0022 BB6A     		ldr	r3, [r7, #40]
 1644 0024 0833     		adds	r3, r3, #8
 1645              		.loc 1 436 7
 1646 0026 1846     		mov	r0, r3
 1647 0028 FFF7FEFF 		bl	dec32be
 1648 002c 7863     		str	r0, [r7, #52]
 437:katrng.c      **** 	s3 = dec32be(buf + 12);
 1649              		.loc 1 437 19
 1650 002e BB6A     		ldr	r3, [r7, #40]
 1651 0030 0C33     		adds	r3, r3, #12
 1652              		.loc 1 437 7
 1653 0032 1846     		mov	r0, r3
 1654 0034 FFF7FEFF 		bl	dec32be
 1655 0038 3863     		str	r0, [r7, #48]
 438:katrng.c      **** 	s0 ^= skey[0];
 1656              		.loc 1 438 12
 1657 003a 7B68     		ldr	r3, [r7, #4]
 1658 003c 1B68     		ldr	r3, [r3]
 1659              		.loc 1 438 5
 1660 003e FA6B     		ldr	r2, [r7, #60]
 1661 0040 5340     		eors	r3, r3, r2
 1662 0042 FB63     		str	r3, [r7, #60]
 439:katrng.c      **** 	s1 ^= skey[1];
 1663              		.loc 1 439 12
 1664 0044 7B68     		ldr	r3, [r7, #4]
 1665 0046 0433     		adds	r3, r3, #4
 1666 0048 1B68     		ldr	r3, [r3]
 1667              		.loc 1 439 5
 1668 004a BA6B     		ldr	r2, [r7, #56]
 1669 004c 5340     		eors	r3, r3, r2
 1670 004e BB63     		str	r3, [r7, #56]
 440:katrng.c      **** 	s2 ^= skey[2];
 1671              		.loc 1 440 12
 1672 0050 7B68     		ldr	r3, [r7, #4]
 1673 0052 0833     		adds	r3, r3, #8
 1674 0054 1B68     		ldr	r3, [r3]
 1675              		.loc 1 440 5
 1676 0056 7A6B     		ldr	r2, [r7, #52]
 1677 0058 5340     		eors	r3, r3, r2
 1678 005a 7B63     		str	r3, [r7, #52]
 441:katrng.c      **** 	s3 ^= skey[3];
 1679              		.loc 1 441 12
 1680 005c 7B68     		ldr	r3, [r7, #4]
 1681 005e 0C33     		adds	r3, r3, #12
 1682 0060 1B68     		ldr	r3, [r3]
 1683              		.loc 1 441 5
 1684 0062 3A6B     		ldr	r2, [r7, #48]
 1685 0064 5340     		eors	r3, r3, r2
 1686 0066 3B63     		str	r3, [r7, #48]
 442:katrng.c      **** 	for (u = 1; u < 14; u ++) {
 1687              		.loc 1 442 9
 1688 0068 0123     		movs	r3, #1
 1689 006a FB62     		str	r3, [r7, #44]
 1690              		.loc 1 442 2
 1691 006c D1E0     		b	.L68
 1692              	.L69:
 1693              	.LBB9:
 443:katrng.c      **** 		uint32_t v0, v1, v2, v3;
 444:katrng.c      **** 
 445:katrng.c      **** 		v0 = SboxExt0(s0 >> 24)
 1694              		.loc 1 445 8 discriminator 3
 1695 006e FB6B     		ldr	r3, [r7, #60]
 1696 0070 1B0E     		lsrs	r3, r3, #24
 1697 0072 AC4A     		ldr	r2, .L70
 1698 0074 52F82340 		ldr	r4, [r2, r3, lsl #2]
 446:katrng.c      **** 			^ SboxExt1((s1 >> 16) & 0xFF)
 1699              		.loc 1 446 6 discriminator 3
 1700 0078 BB6B     		ldr	r3, [r7, #56]
 1701 007a 1B0C     		lsrs	r3, r3, #16
 1702 007c DBB2     		uxtb	r3, r3
 1703 007e A94A     		ldr	r2, .L70
 1704 0080 52F82330 		ldr	r3, [r2, r3, lsl #2]
 1705 0084 0821     		movs	r1, #8
 1706 0086 1846     		mov	r0, r3
 1707 0088 FFF7FEFF 		bl	rotr
 1708 008c 0346     		mov	r3, r0
 1709              		.loc 1 446 4 discriminator 3
 1710 008e 5C40     		eors	r4, r4, r3
 447:katrng.c      **** 			^ SboxExt2((s2 >> 8) & 0xFF)
 1711              		.loc 1 447 6 discriminator 3
 1712 0090 7B6B     		ldr	r3, [r7, #52]
 1713 0092 1B0A     		lsrs	r3, r3, #8
 1714 0094 DBB2     		uxtb	r3, r3
 1715 0096 A34A     		ldr	r2, .L70
 1716 0098 52F82330 		ldr	r3, [r2, r3, lsl #2]
 1717 009c 1021     		movs	r1, #16
 1718 009e 1846     		mov	r0, r3
 1719 00a0 FFF7FEFF 		bl	rotr
 1720 00a4 0346     		mov	r3, r0
 1721              		.loc 1 447 4 discriminator 3
 1722 00a6 5C40     		eors	r4, r4, r3
 448:katrng.c      **** 			^ SboxExt3(s3 & 0xFF);
 1723              		.loc 1 448 6 discriminator 3
 1724 00a8 3B6B     		ldr	r3, [r7, #48]
 1725 00aa DBB2     		uxtb	r3, r3
 1726 00ac 9D4A     		ldr	r2, .L70
 1727 00ae 52F82330 		ldr	r3, [r2, r3, lsl #2]
 1728 00b2 1821     		movs	r1, #24
 1729 00b4 1846     		mov	r0, r3
 1730 00b6 FFF7FEFF 		bl	rotr
 1731 00ba 0346     		mov	r3, r0
 445:katrng.c      **** 			^ SboxExt1((s1 >> 16) & 0xFF)
 1732              		.loc 1 445 6 discriminator 3
 1733 00bc 6340     		eors	r3, r3, r4
 1734 00be 7B61     		str	r3, [r7, #20]
 449:katrng.c      **** 		v1 = SboxExt0(s1 >> 24)
 1735              		.loc 1 449 8 discriminator 3
 1736 00c0 BB6B     		ldr	r3, [r7, #56]
 1737 00c2 1B0E     		lsrs	r3, r3, #24
 1738 00c4 974A     		ldr	r2, .L70
 1739 00c6 52F82340 		ldr	r4, [r2, r3, lsl #2]
 450:katrng.c      **** 			^ SboxExt1((s2 >> 16) & 0xFF)
 1740              		.loc 1 450 6 discriminator 3
 1741 00ca 7B6B     		ldr	r3, [r7, #52]
 1742 00cc 1B0C     		lsrs	r3, r3, #16
 1743 00ce DBB2     		uxtb	r3, r3
 1744 00d0 944A     		ldr	r2, .L70
 1745 00d2 52F82330 		ldr	r3, [r2, r3, lsl #2]
 1746 00d6 0821     		movs	r1, #8
 1747 00d8 1846     		mov	r0, r3
 1748 00da FFF7FEFF 		bl	rotr
 1749 00de 0346     		mov	r3, r0
 1750              		.loc 1 450 4 discriminator 3
 1751 00e0 5C40     		eors	r4, r4, r3
 451:katrng.c      **** 			^ SboxExt2((s3 >> 8) & 0xFF)
 1752              		.loc 1 451 6 discriminator 3
 1753 00e2 3B6B     		ldr	r3, [r7, #48]
 1754 00e4 1B0A     		lsrs	r3, r3, #8
 1755 00e6 DBB2     		uxtb	r3, r3
 1756 00e8 8E4A     		ldr	r2, .L70
 1757 00ea 52F82330 		ldr	r3, [r2, r3, lsl #2]
 1758 00ee 1021     		movs	r1, #16
 1759 00f0 1846     		mov	r0, r3
 1760 00f2 FFF7FEFF 		bl	rotr
 1761 00f6 0346     		mov	r3, r0
 1762              		.loc 1 451 4 discriminator 3
 1763 00f8 5C40     		eors	r4, r4, r3
 452:katrng.c      **** 			^ SboxExt3(s0 & 0xFF);
 1764              		.loc 1 452 6 discriminator 3
 1765 00fa FB6B     		ldr	r3, [r7, #60]
 1766 00fc DBB2     		uxtb	r3, r3
 1767 00fe 894A     		ldr	r2, .L70
 1768 0100 52F82330 		ldr	r3, [r2, r3, lsl #2]
 1769 0104 1821     		movs	r1, #24
 1770 0106 1846     		mov	r0, r3
 1771 0108 FFF7FEFF 		bl	rotr
 1772 010c 0346     		mov	r3, r0
 449:katrng.c      **** 			^ SboxExt1((s2 >> 16) & 0xFF)
 1773              		.loc 1 449 6 discriminator 3
 1774 010e 6340     		eors	r3, r3, r4
 1775 0110 3B61     		str	r3, [r7, #16]
 453:katrng.c      **** 		v2 = SboxExt0(s2 >> 24)
 1776              		.loc 1 453 8 discriminator 3
 1777 0112 7B6B     		ldr	r3, [r7, #52]
 1778 0114 1B0E     		lsrs	r3, r3, #24
 1779 0116 834A     		ldr	r2, .L70
 1780 0118 52F82340 		ldr	r4, [r2, r3, lsl #2]
 454:katrng.c      **** 			^ SboxExt1((s3 >> 16) & 0xFF)
 1781              		.loc 1 454 6 discriminator 3
 1782 011c 3B6B     		ldr	r3, [r7, #48]
 1783 011e 1B0C     		lsrs	r3, r3, #16
 1784 0120 DBB2     		uxtb	r3, r3
 1785 0122 804A     		ldr	r2, .L70
 1786 0124 52F82330 		ldr	r3, [r2, r3, lsl #2]
 1787 0128 0821     		movs	r1, #8
 1788 012a 1846     		mov	r0, r3
 1789 012c FFF7FEFF 		bl	rotr
 1790 0130 0346     		mov	r3, r0
 1791              		.loc 1 454 4 discriminator 3
 1792 0132 5C40     		eors	r4, r4, r3
 455:katrng.c      **** 			^ SboxExt2((s0 >> 8) & 0xFF)
 1793              		.loc 1 455 6 discriminator 3
 1794 0134 FB6B     		ldr	r3, [r7, #60]
 1795 0136 1B0A     		lsrs	r3, r3, #8
 1796 0138 DBB2     		uxtb	r3, r3
 1797 013a 7A4A     		ldr	r2, .L70
 1798 013c 52F82330 		ldr	r3, [r2, r3, lsl #2]
 1799 0140 1021     		movs	r1, #16
 1800 0142 1846     		mov	r0, r3
 1801 0144 FFF7FEFF 		bl	rotr
 1802 0148 0346     		mov	r3, r0
 1803              		.loc 1 455 4 discriminator 3
 1804 014a 5C40     		eors	r4, r4, r3
 456:katrng.c      **** 			^ SboxExt3(s1 & 0xFF);
 1805              		.loc 1 456 6 discriminator 3
 1806 014c BB6B     		ldr	r3, [r7, #56]
 1807 014e DBB2     		uxtb	r3, r3
 1808 0150 744A     		ldr	r2, .L70
 1809 0152 52F82330 		ldr	r3, [r2, r3, lsl #2]
 1810 0156 1821     		movs	r1, #24
 1811 0158 1846     		mov	r0, r3
 1812 015a FFF7FEFF 		bl	rotr
 1813 015e 0346     		mov	r3, r0
 453:katrng.c      **** 			^ SboxExt1((s3 >> 16) & 0xFF)
 1814              		.loc 1 453 6 discriminator 3
 1815 0160 6340     		eors	r3, r3, r4
 1816 0162 FB60     		str	r3, [r7, #12]
 457:katrng.c      **** 		v3 = SboxExt0(s3 >> 24)
 1817              		.loc 1 457 8 discriminator 3
 1818 0164 3B6B     		ldr	r3, [r7, #48]
 1819 0166 1B0E     		lsrs	r3, r3, #24
 1820 0168 6E4A     		ldr	r2, .L70
 1821 016a 52F82340 		ldr	r4, [r2, r3, lsl #2]
 458:katrng.c      **** 			^ SboxExt1((s0 >> 16) & 0xFF)
 1822              		.loc 1 458 6 discriminator 3
 1823 016e FB6B     		ldr	r3, [r7, #60]
 1824 0170 1B0C     		lsrs	r3, r3, #16
 1825 0172 DBB2     		uxtb	r3, r3
 1826 0174 6B4A     		ldr	r2, .L70
 1827 0176 52F82330 		ldr	r3, [r2, r3, lsl #2]
 1828 017a 0821     		movs	r1, #8
 1829 017c 1846     		mov	r0, r3
 1830 017e FFF7FEFF 		bl	rotr
 1831 0182 0346     		mov	r3, r0
 1832              		.loc 1 458 4 discriminator 3
 1833 0184 5C40     		eors	r4, r4, r3
 459:katrng.c      **** 			^ SboxExt2((s1 >> 8) & 0xFF)
 1834              		.loc 1 459 6 discriminator 3
 1835 0186 BB6B     		ldr	r3, [r7, #56]
 1836 0188 1B0A     		lsrs	r3, r3, #8
 1837 018a DBB2     		uxtb	r3, r3
 1838 018c 654A     		ldr	r2, .L70
 1839 018e 52F82330 		ldr	r3, [r2, r3, lsl #2]
 1840 0192 1021     		movs	r1, #16
 1841 0194 1846     		mov	r0, r3
 1842 0196 FFF7FEFF 		bl	rotr
 1843 019a 0346     		mov	r3, r0
 1844              		.loc 1 459 4 discriminator 3
 1845 019c 5C40     		eors	r4, r4, r3
 460:katrng.c      **** 			^ SboxExt3(s2 & 0xFF);
 1846              		.loc 1 460 6 discriminator 3
 1847 019e 7B6B     		ldr	r3, [r7, #52]
 1848 01a0 DBB2     		uxtb	r3, r3
 1849 01a2 604A     		ldr	r2, .L70
 1850 01a4 52F82330 		ldr	r3, [r2, r3, lsl #2]
 1851 01a8 1821     		movs	r1, #24
 1852 01aa 1846     		mov	r0, r3
 1853 01ac FFF7FEFF 		bl	rotr
 1854 01b0 0346     		mov	r3, r0
 457:katrng.c      **** 			^ SboxExt1((s0 >> 16) & 0xFF)
 1855              		.loc 1 457 6 discriminator 3
 1856 01b2 6340     		eors	r3, r3, r4
 1857 01b4 BB60     		str	r3, [r7, #8]
 461:katrng.c      **** 		s0 = v0;
 1858              		.loc 1 461 6 discriminator 3
 1859 01b6 7B69     		ldr	r3, [r7, #20]
 1860 01b8 FB63     		str	r3, [r7, #60]
 462:katrng.c      **** 		s1 = v1;
 1861              		.loc 1 462 6 discriminator 3
 1862 01ba 3B69     		ldr	r3, [r7, #16]
 1863 01bc BB63     		str	r3, [r7, #56]
 463:katrng.c      **** 		s2 = v2;
 1864              		.loc 1 463 6 discriminator 3
 1865 01be FB68     		ldr	r3, [r7, #12]
 1866 01c0 7B63     		str	r3, [r7, #52]
 464:katrng.c      **** 		s3 = v3;
 1867              		.loc 1 464 6 discriminator 3
 1868 01c2 BB68     		ldr	r3, [r7, #8]
 1869 01c4 3B63     		str	r3, [r7, #48]
 465:katrng.c      **** 		s0 ^= skey[u << 2];
 1870              		.loc 1 465 13 discriminator 3
 1871 01c6 FB6A     		ldr	r3, [r7, #44]
 1872 01c8 1B01     		lsls	r3, r3, #4
 1873 01ca 7A68     		ldr	r2, [r7, #4]
 1874 01cc 1344     		add	r3, r3, r2
 1875 01ce 1B68     		ldr	r3, [r3]
 1876              		.loc 1 465 6 discriminator 3
 1877 01d0 FA6B     		ldr	r2, [r7, #60]
 1878 01d2 5340     		eors	r3, r3, r2
 1879 01d4 FB63     		str	r3, [r7, #60]
 466:katrng.c      **** 		s1 ^= skey[(u << 2) + 1];
 1880              		.loc 1 466 13 discriminator 3
 1881 01d6 FB6A     		ldr	r3, [r7, #44]
 1882 01d8 1B01     		lsls	r3, r3, #4
 1883 01da 0433     		adds	r3, r3, #4
 1884 01dc 7A68     		ldr	r2, [r7, #4]
 1885 01de 1344     		add	r3, r3, r2
 1886 01e0 1B68     		ldr	r3, [r3]
 1887              		.loc 1 466 6 discriminator 3
 1888 01e2 BA6B     		ldr	r2, [r7, #56]
 1889 01e4 5340     		eors	r3, r3, r2
 1890 01e6 BB63     		str	r3, [r7, #56]
 467:katrng.c      **** 		s2 ^= skey[(u << 2) + 2];
 1891              		.loc 1 467 13 discriminator 3
 1892 01e8 FB6A     		ldr	r3, [r7, #44]
 1893 01ea 1B01     		lsls	r3, r3, #4
 1894 01ec 0833     		adds	r3, r3, #8
 1895 01ee 7A68     		ldr	r2, [r7, #4]
 1896 01f0 1344     		add	r3, r3, r2
 1897 01f2 1B68     		ldr	r3, [r3]
 1898              		.loc 1 467 6 discriminator 3
 1899 01f4 7A6B     		ldr	r2, [r7, #52]
 1900 01f6 5340     		eors	r3, r3, r2
 1901 01f8 7B63     		str	r3, [r7, #52]
 468:katrng.c      **** 		s3 ^= skey[(u << 2) + 3];
 1902              		.loc 1 468 13 discriminator 3
 1903 01fa FB6A     		ldr	r3, [r7, #44]
 1904 01fc 1B01     		lsls	r3, r3, #4
 1905 01fe 0C33     		adds	r3, r3, #12
 1906 0200 7A68     		ldr	r2, [r7, #4]
 1907 0202 1344     		add	r3, r3, r2
 1908 0204 1B68     		ldr	r3, [r3]
 1909              		.loc 1 468 6 discriminator 3
 1910 0206 3A6B     		ldr	r2, [r7, #48]
 1911 0208 5340     		eors	r3, r3, r2
 1912 020a 3B63     		str	r3, [r7, #48]
 1913              	.LBE9:
 442:katrng.c      **** 		uint32_t v0, v1, v2, v3;
 1914              		.loc 1 442 24 discriminator 3
 1915 020c FB6A     		ldr	r3, [r7, #44]
 1916 020e 0133     		adds	r3, r3, #1
 1917 0210 FB62     		str	r3, [r7, #44]
 1918              	.L68:
 442:katrng.c      **** 		uint32_t v0, v1, v2, v3;
 1919              		.loc 1 442 2 discriminator 1
 1920 0212 FB6A     		ldr	r3, [r7, #44]
 1921 0214 0D2B     		cmp	r3, #13
 1922 0216 7FF62AAF 		bls	.L69
 469:katrng.c      **** 	}
 470:katrng.c      **** 	t0 = ((uint32_t)S[s0 >> 24] << 24)
 1923              		.loc 1 470 23
 1924 021a FB6B     		ldr	r3, [r7, #60]
 1925 021c 1B0E     		lsrs	r3, r3, #24
 1926              		.loc 1 470 19
 1927 021e 424A     		ldr	r2, .L70+4
 1928 0220 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 1929              		.loc 1 470 30
 1930 0222 1A06     		lsls	r2, r3, #24
 471:katrng.c      **** 		| ((uint32_t)S[(s1 >> 16) & 0xFF] << 16)
 1931              		.loc 1 471 22
 1932 0224 BB6B     		ldr	r3, [r7, #56]
 1933 0226 1B0C     		lsrs	r3, r3, #16
 1934              		.loc 1 471 29
 1935 0228 DBB2     		uxtb	r3, r3
 1936              		.loc 1 471 17
 1937 022a 3F49     		ldr	r1, .L70+4
 1938 022c CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 1939              		.loc 1 471 37
 1940 022e 1B04     		lsls	r3, r3, #16
 1941              		.loc 1 471 3
 1942 0230 1A43     		orrs	r2, r2, r3
 472:katrng.c      **** 		| ((uint32_t)S[(s2 >> 8) & 0xFF] << 8)
 1943              		.loc 1 472 22
 1944 0232 7B6B     		ldr	r3, [r7, #52]
 1945 0234 1B0A     		lsrs	r3, r3, #8
 1946              		.loc 1 472 28
 1947 0236 DBB2     		uxtb	r3, r3
 1948              		.loc 1 472 17
 1949 0238 3B49     		ldr	r1, .L70+4
 1950 023a CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 1951              		.loc 1 472 36
 1952 023c 1B02     		lsls	r3, r3, #8
 1953              		.loc 1 472 3
 1954 023e 1343     		orrs	r3, r3, r2
 473:katrng.c      **** 		| (uint32_t)S[s3 & 0xFF];
 1955              		.loc 1 473 20
 1956 0240 3A6B     		ldr	r2, [r7, #48]
 1957 0242 D2B2     		uxtb	r2, r2
 1958              		.loc 1 473 16
 1959 0244 3849     		ldr	r1, .L70+4
 1960 0246 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 470:katrng.c      **** 		| ((uint32_t)S[(s1 >> 16) & 0xFF] << 16)
 1961              		.loc 1 470 5
 1962 0248 1343     		orrs	r3, r3, r2
 1963 024a 7B62     		str	r3, [r7, #36]
 474:katrng.c      **** 	t1 = ((uint32_t)S[s1 >> 24] << 24)
 1964              		.loc 1 474 23
 1965 024c BB6B     		ldr	r3, [r7, #56]
 1966 024e 1B0E     		lsrs	r3, r3, #24
 1967              		.loc 1 474 19
 1968 0250 354A     		ldr	r2, .L70+4
 1969 0252 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 1970              		.loc 1 474 30
 1971 0254 1A06     		lsls	r2, r3, #24
 475:katrng.c      **** 		| ((uint32_t)S[(s2 >> 16) & 0xFF] << 16)
 1972              		.loc 1 475 22
 1973 0256 7B6B     		ldr	r3, [r7, #52]
 1974 0258 1B0C     		lsrs	r3, r3, #16
 1975              		.loc 1 475 29
 1976 025a DBB2     		uxtb	r3, r3
 1977              		.loc 1 475 17
 1978 025c 3249     		ldr	r1, .L70+4
 1979 025e CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 1980              		.loc 1 475 37
 1981 0260 1B04     		lsls	r3, r3, #16
 1982              		.loc 1 475 3
 1983 0262 1A43     		orrs	r2, r2, r3
 476:katrng.c      **** 		| ((uint32_t)S[(s3 >> 8) & 0xFF] << 8)
 1984              		.loc 1 476 22
 1985 0264 3B6B     		ldr	r3, [r7, #48]
 1986 0266 1B0A     		lsrs	r3, r3, #8
 1987              		.loc 1 476 28
 1988 0268 DBB2     		uxtb	r3, r3
 1989              		.loc 1 476 17
 1990 026a 2F49     		ldr	r1, .L70+4
 1991 026c CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 1992              		.loc 1 476 36
 1993 026e 1B02     		lsls	r3, r3, #8
 1994              		.loc 1 476 3
 1995 0270 1343     		orrs	r3, r3, r2
 477:katrng.c      **** 		| (uint32_t)S[s0 & 0xFF];
 1996              		.loc 1 477 20
 1997 0272 FA6B     		ldr	r2, [r7, #60]
 1998 0274 D2B2     		uxtb	r2, r2
 1999              		.loc 1 477 16
 2000 0276 2C49     		ldr	r1, .L70+4
 2001 0278 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 474:katrng.c      **** 		| ((uint32_t)S[(s2 >> 16) & 0xFF] << 16)
 2002              		.loc 1 474 5
 2003 027a 1343     		orrs	r3, r3, r2
 2004 027c 3B62     		str	r3, [r7, #32]
 478:katrng.c      **** 	t2 = ((uint32_t)S[s2 >> 24] << 24)
 2005              		.loc 1 478 23
 2006 027e 7B6B     		ldr	r3, [r7, #52]
 2007 0280 1B0E     		lsrs	r3, r3, #24
 2008              		.loc 1 478 19
 2009 0282 294A     		ldr	r2, .L70+4
 2010 0284 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 2011              		.loc 1 478 30
 2012 0286 1A06     		lsls	r2, r3, #24
 479:katrng.c      **** 		| ((uint32_t)S[(s3 >> 16) & 0xFF] << 16)
 2013              		.loc 1 479 22
 2014 0288 3B6B     		ldr	r3, [r7, #48]
 2015 028a 1B0C     		lsrs	r3, r3, #16
 2016              		.loc 1 479 29
 2017 028c DBB2     		uxtb	r3, r3
 2018              		.loc 1 479 17
 2019 028e 2649     		ldr	r1, .L70+4
 2020 0290 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 2021              		.loc 1 479 37
 2022 0292 1B04     		lsls	r3, r3, #16
 2023              		.loc 1 479 3
 2024 0294 1A43     		orrs	r2, r2, r3
 480:katrng.c      **** 		| ((uint32_t)S[(s0 >> 8) & 0xFF] << 8)
 2025              		.loc 1 480 22
 2026 0296 FB6B     		ldr	r3, [r7, #60]
 2027 0298 1B0A     		lsrs	r3, r3, #8
 2028              		.loc 1 480 28
 2029 029a DBB2     		uxtb	r3, r3
 2030              		.loc 1 480 17
 2031 029c 2249     		ldr	r1, .L70+4
 2032 029e CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 2033              		.loc 1 480 36
 2034 02a0 1B02     		lsls	r3, r3, #8
 2035              		.loc 1 480 3
 2036 02a2 1343     		orrs	r3, r3, r2
 481:katrng.c      **** 		| (uint32_t)S[s1 & 0xFF];
 2037              		.loc 1 481 20
 2038 02a4 BA6B     		ldr	r2, [r7, #56]
 2039 02a6 D2B2     		uxtb	r2, r2
 2040              		.loc 1 481 16
 2041 02a8 1F49     		ldr	r1, .L70+4
 2042 02aa 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 478:katrng.c      **** 		| ((uint32_t)S[(s3 >> 16) & 0xFF] << 16)
 2043              		.loc 1 478 5
 2044 02ac 1343     		orrs	r3, r3, r2
 2045 02ae FB61     		str	r3, [r7, #28]
 482:katrng.c      **** 	t3 = ((uint32_t)S[s3 >> 24] << 24)
 2046              		.loc 1 482 23
 2047 02b0 3B6B     		ldr	r3, [r7, #48]
 2048 02b2 1B0E     		lsrs	r3, r3, #24
 2049              		.loc 1 482 19
 2050 02b4 1C4A     		ldr	r2, .L70+4
 2051 02b6 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 2052              		.loc 1 482 30
 2053 02b8 1A06     		lsls	r2, r3, #24
 483:katrng.c      **** 		| ((uint32_t)S[(s0 >> 16) & 0xFF] << 16)
 2054              		.loc 1 483 22
 2055 02ba FB6B     		ldr	r3, [r7, #60]
 2056 02bc 1B0C     		lsrs	r3, r3, #16
 2057              		.loc 1 483 29
 2058 02be DBB2     		uxtb	r3, r3
 2059              		.loc 1 483 17
 2060 02c0 1949     		ldr	r1, .L70+4
 2061 02c2 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 2062              		.loc 1 483 37
 2063 02c4 1B04     		lsls	r3, r3, #16
 2064              		.loc 1 483 3
 2065 02c6 1A43     		orrs	r2, r2, r3
 484:katrng.c      **** 		| ((uint32_t)S[(s1 >> 8) & 0xFF] << 8)
 2066              		.loc 1 484 22
 2067 02c8 BB6B     		ldr	r3, [r7, #56]
 2068 02ca 1B0A     		lsrs	r3, r3, #8
 2069              		.loc 1 484 28
 2070 02cc DBB2     		uxtb	r3, r3
 2071              		.loc 1 484 17
 2072 02ce 1649     		ldr	r1, .L70+4
 2073 02d0 CB5C     		ldrb	r3, [r1, r3]	@ zero_extendqisi2
 2074              		.loc 1 484 36
 2075 02d2 1B02     		lsls	r3, r3, #8
 2076              		.loc 1 484 3
 2077 02d4 1343     		orrs	r3, r3, r2
 485:katrng.c      **** 		| (uint32_t)S[s2 & 0xFF];
 2078              		.loc 1 485 20
 2079 02d6 7A6B     		ldr	r2, [r7, #52]
 2080 02d8 D2B2     		uxtb	r2, r2
 2081              		.loc 1 485 16
 2082 02da 1349     		ldr	r1, .L70+4
 2083 02dc 8A5C     		ldrb	r2, [r1, r2]	@ zero_extendqisi2
 482:katrng.c      **** 		| ((uint32_t)S[(s0 >> 16) & 0xFF] << 16)
 2084              		.loc 1 482 5
 2085 02de 1343     		orrs	r3, r3, r2
 2086 02e0 BB61     		str	r3, [r7, #24]
 486:katrng.c      **** 	s0 = t0 ^ skey[56];
 2087              		.loc 1 486 16
 2088 02e2 7B68     		ldr	r3, [r7, #4]
 2089 02e4 E033     		adds	r3, r3, #224
 2090 02e6 1B68     		ldr	r3, [r3]
 2091              		.loc 1 486 5
 2092 02e8 7A6A     		ldr	r2, [r7, #36]
 2093 02ea 5340     		eors	r3, r3, r2
 2094 02ec FB63     		str	r3, [r7, #60]
 487:katrng.c      **** 	s1 = t1 ^ skey[57];
 2095              		.loc 1 487 16
 2096 02ee 7B68     		ldr	r3, [r7, #4]
 2097 02f0 E433     		adds	r3, r3, #228
 2098 02f2 1B68     		ldr	r3, [r3]
 2099              		.loc 1 487 5
 2100 02f4 3A6A     		ldr	r2, [r7, #32]
 2101 02f6 5340     		eors	r3, r3, r2
 2102 02f8 BB63     		str	r3, [r7, #56]
 488:katrng.c      **** 	s2 = t2 ^ skey[58];
 2103              		.loc 1 488 16
 2104 02fa 7B68     		ldr	r3, [r7, #4]
 2105 02fc E833     		adds	r3, r3, #232
 2106 02fe 1B68     		ldr	r3, [r3]
 2107              		.loc 1 488 5
 2108 0300 FA69     		ldr	r2, [r7, #28]
 2109 0302 5340     		eors	r3, r3, r2
 2110 0304 7B63     		str	r3, [r7, #52]
 489:katrng.c      **** 	s3 = t3 ^ skey[59];
 2111              		.loc 1 489 16
 2112 0306 7B68     		ldr	r3, [r7, #4]
 2113 0308 EC33     		adds	r3, r3, #236
 2114 030a 1B68     		ldr	r3, [r3]
 2115              		.loc 1 489 5
 2116 030c BA69     		ldr	r2, [r7, #24]
 2117 030e 5340     		eors	r3, r3, r2
 2118 0310 3B63     		str	r3, [r7, #48]
 490:katrng.c      **** 	enc32be(buf, s0);
 2119              		.loc 1 490 2
 2120 0312 F96B     		ldr	r1, [r7, #60]
 2121 0314 B86A     		ldr	r0, [r7, #40]
 2122 0316 FFF7FEFF 		bl	enc32be
 491:katrng.c      **** 	enc32be(buf + 4, s1);
 2123              		.loc 1 491 14
 2124 031a BB6A     		ldr	r3, [r7, #40]
 2125 031c 0433     		adds	r3, r3, #4
 2126              		.loc 1 491 2
 2127 031e B96B     		ldr	r1, [r7, #56]
 2128 0320 1846     		mov	r0, r3
 2129 0322 03E0     		b	.L71
 2130              	.L72:
 2131              		.align	2
 2132              	.L70:
 2133 0324 28010000 		.word	Ssm0
 2134 0328 28000000 		.word	S
 2135              	.L71:
 2136 032c FFF7FEFF 		bl	enc32be
 492:katrng.c      **** 	enc32be(buf + 8, s2);
 2137              		.loc 1 492 14
 2138 0330 BB6A     		ldr	r3, [r7, #40]
 2139 0332 0833     		adds	r3, r3, #8
 2140              		.loc 1 492 2
 2141 0334 796B     		ldr	r1, [r7, #52]
 2142 0336 1846     		mov	r0, r3
 2143 0338 FFF7FEFF 		bl	enc32be
 493:katrng.c      **** 	enc32be(buf + 12, s3);
 2144              		.loc 1 493 14
 2145 033c BB6A     		ldr	r3, [r7, #40]
 2146 033e 0C33     		adds	r3, r3, #12
 2147              		.loc 1 493 2
 2148 0340 396B     		ldr	r1, [r7, #48]
 2149 0342 1846     		mov	r0, r3
 2150 0344 FFF7FEFF 		bl	enc32be
 494:katrng.c      **** }
 2151              		.loc 1 494 1
 2152 0348 00BF     		nop
 2153 034a 4437     		adds	r7, r7, #68
 2154              	.LCFI57:
 2155              		.cfi_def_cfa_offset 12
 2156 034c BD46     		mov	sp, r7
 2157              	.LCFI58:
 2158              		.cfi_def_cfa_register 13
 2159              		@ sp needed
 2160 034e 90BD     		pop	{r4, r7, pc}
 2161              		.cfi_endproc
 2162              	.LFE13:
 2164              		.section	.text.AES256_ECB,"ax",%progbits
 2165              		.align	1
 2166              		.global	AES256_ECB
 2167              		.syntax unified
 2168              		.thumb
 2169              		.thumb_func
 2170              		.fpu softvfp
 2172              	AES256_ECB:
 2173              	.LFB14:
 495:katrng.c      **** 
 496:katrng.c      **** void
 497:katrng.c      **** AES256_ECB(unsigned char *key, unsigned char *ctr, unsigned char *buffer)
 498:katrng.c      **** {
 2174              		.loc 1 498 1
 2175              		.cfi_startproc
 2176              		@ args = 0, pretend = 0, frame = 256
 2177              		@ frame_needed = 1, uses_anonymous_args = 0
 2178 0000 80B5     		push	{r7, lr}
 2179              	.LCFI59:
 2180              		.cfi_def_cfa_offset 8
 2181              		.cfi_offset 7, -8
 2182              		.cfi_offset 14, -4
 2183 0002 C0B0     		sub	sp, sp, #256
 2184              	.LCFI60:
 2185              		.cfi_def_cfa_offset 264
 2186 0004 00AF     		add	r7, sp, #0
 2187              	.LCFI61:
 2188              		.cfi_def_cfa_register 7
 2189 0006 F860     		str	r0, [r7, #12]
 2190 0008 B960     		str	r1, [r7, #8]
 2191 000a 7A60     		str	r2, [r7, #4]
 499:katrng.c      **** 	// 32ë°ì´í¸ ì§ë¦¬ 0ì¼ë¡ ì´ê¸°íë keyê° ì²ìì ë¤ì´ê°ë¤.
 500:katrng.c      **** 	// 16ë°ì´í¸ ì§ë¦¬ 0ì¼ë¡ ì¹íë Vê° ì² ìì ë¤ì´ê°ê² ëë¤.
 501:katrng.c      **** 	// ì²ììë temp+16+0 = tempê° ë¤ì´ê°ë¤.
 502:katrng.c      **** 
 503:katrng.c      **** 	// 
 504:katrng.c      **** 	uint32_t skey[60];
 505:katrng.c      **** 
 506:katrng.c      **** 	aes256_keysched(skey, key);
 2192              		.loc 1 506 2
 2193 000c 07F11003 		add	r3, r7, #16
 2194 0010 F968     		ldr	r1, [r7, #12]
 2195 0012 1846     		mov	r0, r3
 2196 0014 FFF7FEFF 		bl	aes256_keysched
 507:katrng.c      **** 	memmove(buffer, ctr, 16);
 2197              		.loc 1 507 2
 2198 0018 1022     		movs	r2, #16
 2199 001a B968     		ldr	r1, [r7, #8]
 2200 001c 7868     		ldr	r0, [r7, #4]
 2201 001e FFF7FEFF 		bl	memmove
 508:katrng.c      **** 
 509:katrng.c      **** 	// bufferì skeyê° ë¤ì´ê°ê² ëë¤.
 510:katrng.c      **** 	// bufferìë í¸ì¶ íê¸°ì ì ì ì¸íë tempê° ë¤ì´ê°ê² ëë¤.
 511:katrng.c      **** 	// tempìë 48ë°ì´í¸ê° ìì§ë§ 16ë°ì´í¸ì© ë¤ì´ê°ë¤. 
 512:katrng.c      **** 
 513:katrng.c      **** 	// AES256_ECB(Key, V, temp+16*i);
 514:katrng.c      **** 	aes256_encrypt(skey, buffer);
 2202              		.loc 1 514 2
 2203 0022 07F11003 		add	r3, r7, #16
 2204 0026 7968     		ldr	r1, [r7, #4]
 2205 0028 1846     		mov	r0, r3
 2206 002a FFF7FEFF 		bl	aes256_encrypt
 515:katrng.c      **** }
 2207              		.loc 1 515 1
 2208 002e 00BF     		nop
 2209 0030 07F58077 		add	r7, r7, #256
 2210              	.LCFI62:
 2211              		.cfi_def_cfa_offset 8
 2212 0034 BD46     		mov	sp, r7
 2213              	.LCFI63:
 2214              		.cfi_def_cfa_register 13
 2215              		@ sp needed
 2216 0036 80BD     		pop	{r7, pc}
 2217              		.cfi_endproc
 2218              	.LFE14:
 2220              		.text
 2221              	.Letext0:
 2222              		.file 2 "c:\\users\\user\\chipwhisperer5_64\\cw\\home\\portable\\armgcc\\gcc-arm-none-eabi-10-2020
 2223              		.file 3 "c:\\users\\user\\chipwhisperer5_64\\cw\\home\\portable\\armgcc\\gcc-arm-none-eabi-10-2020
 2224              		.file 4 "katrng.h"
DEFINED SYMBOLS
                            *ABS*:00000000 katrng.c
C:\Users\user\AppData\Local\Temp\ccOSQrYc.s:20     .bss:00000000 DRBG_ctx
C:\Users\user\AppData\Local\Temp\ccOSQrYc.s:17     .bss:00000000 $d
C:\Users\user\AppData\Local\Temp\ccOSQrYc.s:23     .text.seedexpander_init:00000000 $t
C:\Users\user\AppData\Local\Temp\ccOSQrYc.s:31     .text.seedexpander_init:00000000 seedexpander_init
C:\Users\user\AppData\Local\Temp\ccOSQrYc.s:152    .text.seedexpander:00000000 $t
C:\Users\user\AppData\Local\Temp\ccOSQrYc.s:159    .text.seedexpander:00000000 seedexpander
C:\Users\user\AppData\Local\Temp\ccOSQrYc.s:2172   .text.AES256_ECB:00000000 AES256_ECB
C:\Users\user\AppData\Local\Temp\ccOSQrYc.s:374    .text.randombytes_init:00000000 $t
C:\Users\user\AppData\Local\Temp\ccOSQrYc.s:381    .text.randombytes_init:00000000 randombytes_init
C:\Users\user\AppData\Local\Temp\ccOSQrYc.s:684    .text.AES256_CTR_DRBG_Update:00000000 AES256_CTR_DRBG_Update
C:\Users\user\AppData\Local\Temp\ccOSQrYc.s:494    .text.randombytes_init:00000098 $d
C:\Users\user\AppData\Local\Temp\ccOSQrYc.s:500    .text.randombytes:00000000 $t
C:\Users\user\AppData\Local\Temp\ccOSQrYc.s:507    .text.randombytes:00000000 randombytes
C:\Users\user\AppData\Local\Temp\ccOSQrYc.s:671    .text.randombytes:000000ec $d
C:\Users\user\AppData\Local\Temp\ccOSQrYc.s:677    .text.AES256_CTR_DRBG_Update:00000000 $t
C:\Users\user\AppData\Local\Temp\ccOSQrYc.s:846    .text.dec32be:00000000 $t
C:\Users\user\AppData\Local\Temp\ccOSQrYc.s:852    .text.dec32be:00000000 dec32be
C:\Users\user\AppData\Local\Temp\ccOSQrYc.s:918    .text.enc32be:00000000 $t
C:\Users\user\AppData\Local\Temp\ccOSQrYc.s:924    .text.enc32be:00000000 enc32be
C:\Users\user\AppData\Local\Temp\ccOSQrYc.s:1000   .rodata:00000000 $d
C:\Users\user\AppData\Local\Temp\ccOSQrYc.s:1003   .rodata:00000000 Rcon
C:\Users\user\AppData\Local\Temp\ccOSQrYc.s:1017   .rodata:00000028 S
C:\Users\user\AppData\Local\Temp\ccOSQrYc.s:1034   .text.SubWord:00000000 $t
C:\Users\user\AppData\Local\Temp\ccOSQrYc.s:1040   .text.SubWord:00000000 SubWord
C:\Users\user\AppData\Local\Temp\ccOSQrYc.s:1115   .text.SubWord:00000044 $d
C:\Users\user\AppData\Local\Temp\ccOSQrYc.s:1120   .text.aes256_keysched:00000000 $t
C:\Users\user\AppData\Local\Temp\ccOSQrYc.s:1126   .text.aes256_keysched:00000000 aes256_keysched
C:\Users\user\AppData\Local\Temp\ccOSQrYc.s:1289   .text.aes256_keysched:000000d4 $d
C:\Users\user\AppData\Local\Temp\ccOSQrYc.s:1297   .rodata:00000128 Ssm0
C:\Users\user\AppData\Local\Temp\ccOSQrYc.s:1555   .text.rotr:00000000 $t
C:\Users\user\AppData\Local\Temp\ccOSQrYc.s:1561   .text.rotr:00000000 rotr
C:\Users\user\AppData\Local\Temp\ccOSQrYc.s:1602   .text.aes256_encrypt:00000000 $t
C:\Users\user\AppData\Local\Temp\ccOSQrYc.s:1608   .text.aes256_encrypt:00000000 aes256_encrypt
C:\Users\user\AppData\Local\Temp\ccOSQrYc.s:2133   .text.aes256_encrypt:00000324 $d
C:\Users\user\AppData\Local\Temp\ccOSQrYc.s:2136   .text.aes256_encrypt:0000032c $t
C:\Users\user\AppData\Local\Temp\ccOSQrYc.s:2165   .text.AES256_ECB:00000000 $t

UNDEFINED SYMBOLS
memcpy
memset
memmove
